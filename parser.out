Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CDER
    CIZQ
    DELETE
    ISNEGADO
    MOD
    NEW

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> instrucciones
Rule 2     cuerpo -> funcion
Rule 3     cuerpo -> estrcontrol
Rule 4     cuerpo -> def_clase
Rule 5     cuerpo -> constructor
Rule 6     instrucciones -> instruccion PUNTOYCOMA
Rule 7     instrucciones -> instruccion PUNTOYCOMA instrucciones
Rule 8     instrucciones -> BREAK PUNTOYCOMA
Rule 9     instrucciones -> CONTINUE PUNTOYCOMA
Rule 10    instrucciones -> RETURN VARIABLE PUNTOYCOMA
Rule 11    instrucciones -> TYPEOF VARIABLE
Rule 12    instrucciones -> VARIABLE INSTANCEOF VARIABLE
Rule 13    instruccion -> asignacion
Rule 14    instruccion -> expression
Rule 15    instruccion -> comparacion
Rule 16    instruccion -> declaracion
Rule 17    instruccion -> declaasig
Rule 18    instruccion -> operadores
Rule 19    declaracion -> VAR VARIABLE
Rule 20    declaracion -> LET VARIABLE
Rule 21    declaasig -> VAR asignacion
Rule 22    declaasig -> LET asignacion
Rule 23    declaasig -> CONST asignacion
Rule 24    estrcontrol -> if
Rule 25    estrcontrol -> for
Rule 26    estrcontrol -> while
Rule 27    estrcontrol -> dowhile
Rule 28    estrcontrol -> switch
Rule 29    valor -> ENTERO
Rule 30    valor -> FLOAT
Rule 31    valor -> STRING
Rule 32    valor -> BOOL
Rule 33    if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER
Rule 34    if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
Rule 35    if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else
Rule 36    elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER
Rule 37    elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
Rule 38    elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else
Rule 39    else -> ELSE LIZQ instrucciones LDER
Rule 40    else -> ELSE LIZQ LDER
Rule 41    for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
Rule 42    for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
Rule 43    for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
Rule 44    while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
Rule 45    dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
Rule 46    switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
Rule 47    cases -> CASE VARIABLE DOSPUNTOS instrucciones
Rule 48    cases -> CASE VARIABLE DOSPUNTOS instrucciones cases
Rule 49    cases -> DEFAULT DOSPUNTOS instrucciones
Rule 50    throw -> THROW VARIABLE PUNTOYCOMA
Rule 51    trycatch -> TRY LIZQ instrucciones LDER CATCH PIZQ VARIABLE PDER LIZQ instrucciones LDER
Rule 52    trycatch -> TRY LIZQ instrucciones LDER FINALLY LIZQ instrucciones LDER
Rule 53    trycatch -> TRY LIZQ instrucciones LDER CATCH PIZQ VARIABLE PDER LIZQ instrucciones LDER FINALLY LIZQ instrucciones LDER
Rule 54    asignacion -> VARIABLE IGUAL expression
Rule 55    asignacion -> VARIABLE IGUAL comparacion
Rule 56    asignacion -> VARIABLE IGUAL valor
Rule 57    comparacion -> expression comparador expression
Rule 58    comparacion -> expression comparador expression DAMPERSAND comparacion
Rule 59    comparacion -> expression comparador expression DTUBO comparacion
Rule 60    comparacion -> STRING DIGUAL STRING
Rule 61    comparacion -> VARIABLE comparador ENTERO
Rule 62    comparador -> MAYOR
Rule 63    comparador -> MENOR
Rule 64    comparador -> MAYIGUAL
Rule 65    comparador -> MENIGUAL
Rule 66    comparador -> DIGUAL
Rule 67    comparador -> NOIGUAL
Rule 68    operadores -> VARIABLE DSUMA
Rule 69    operadores -> VARIABLE DRESTA
Rule 70    expression -> expression SUMA term
Rule 71    expression -> VARIABLE SUMA VARIABLE
Rule 72    expression -> expression RESTA term
Rule 73    expression -> VARIABLE RESTA VARIABLE
Rule 74    expression -> term
Rule 75    expression -> VARIABLE
Rule 76    term -> term MULTI factor
Rule 77    term -> VARIABLE MULTI VARIABLE
Rule 78    term -> term DIV factor
Rule 79    term -> VARIABLE RESTA VARIABLE
Rule 80    term -> factor
Rule 81    factor -> ENTERO
Rule 82    factor -> FLOAT
Rule 83    expression -> PIZQ expression PDER
Rule 84    expression -> LIZQ expression LDER
Rule 85    funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
Rule 86    funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
Rule 87    funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
Rule 88    funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER
Rule 89    argumentos -> VARIABLE
Rule 90    argumentos -> VARIABLE COMA argumentos
Rule 91    constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER
Rule 92    constructor -> CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER
Rule 93    constructor -> CONSTRUCTOR PIZQ PDER LIZQ LDER
Rule 94    var_class -> THIS PUNTO VARIABLE
Rule 95    var_class -> THIS PUNTO VARIABLE IGUAL valor
Rule 96    var_class -> THIS PUNTO VARIABLE IGUAL VARIABLE
Rule 97    metodo_cuerpo_class -> cuerpo
Rule 98    metodo_cuerpo_class -> var_class
Rule 99    metodo_cuerpo_class -> metodo_cuerpo_class
Rule 100   metodos_class -> funcion
Rule 101   metodos_class -> funcion metodos_class
Rule 102   cuerpo_class -> metodos_class
Rule 103   cuerpo_class -> constructor
Rule 104   cuerpo_class -> constructor metodos_class
Rule 105   def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER
Rule 106   def_clase -> CLASS VARIABLE LIZQ LDER

Terminals, with rules where they appear

BOOL                 : 32
BREAK                : 8
CASE                 : 47 48
CATCH                : 51 53
CDER                 : 
CIZQ                 : 
CLASS                : 105 106
COMA                 : 90
CONST                : 23
CONSTRUCTOR          : 91 92 93
CONTINUE             : 9
DAMPERSAND           : 58
DEFAULT              : 49
DELETE               : 
DIGUAL               : 60 66
DIV                  : 78
DO                   : 45
DOSPUNTOS            : 47 48 49
DRESTA               : 69
DSUMA                : 68
DTUBO                : 59
ELSE                 : 36 37 38 39 40
ENTERO               : 29 61 81
FINALLY              : 52 53
FLOAT                : 30 82
FOR                  : 41 42 43
FUNCTION             : 85 86 87 88
IF                   : 33 34 35 36 37 38
IGUAL                : 54 55 56 95 96
IN                   : 43
INSTANCEOF           : 12
ISNEGADO             : 
LDER                 : 33 34 35 36 37 38 39 40 41 42 43 44 45 46 51 51 52 52 53 53 53 84 85 86 87 88 91 92 93 105 106
LET                  : 20 22
LIZQ                 : 33 34 35 36 37 38 39 40 41 42 43 44 45 46 51 51 52 52 53 53 53 84 85 86 87 88 91 92 93 105 106
MAYIGUAL             : 64
MAYOR                : 62
MENIGUAL             : 65
MENOR                : 63
MOD                  : 
MULTI                : 76 77
NEW                  : 
NOIGUAL              : 67
PDER                 : 33 34 35 36 37 38 41 42 43 44 45 46 51 53 83 85 86 87 88 91 92 93
PIZQ                 : 33 34 35 36 37 38 41 42 43 44 45 46 51 53 83 85 86 87 88 91 92 93
PUNTO                : 94 95 96
PUNTOYCOMA           : 6 7 8 9 10 41 41 42 42 50
RESTA                : 72 73 79
RETURN               : 10
STRING               : 31 60 60
SUMA                 : 70 71
SWITCH               : 46
THIS                 : 94 95 96
THROW                : 50
TRY                  : 51 52 53
TYPEOF               : 11
VAR                  : 19 21
VARIABLE             : 10 11 12 12 19 20 43 46 47 48 50 51 53 54 55 56 61 68 69 71 71 73 73 75 77 77 79 79 85 86 87 88 89 90 94 95 96 96 105 106
WHILE                : 44 45
error                : 

Nonterminals, with rules where they appear

argumentos           : 85 86 90 91
asignacion           : 13 21 22 23 42
cases                : 46 48
comparacion          : 15 33 34 35 36 37 38 41 42 44 45 55 58 59
comparador           : 57 58 59 61
constructor          : 5 103 104
cuerpo               : 97 0
cuerpo_class         : 105
declaasig            : 17 41 42
declaracion          : 16 43
def_clase            : 4
dowhile              : 27
else                 : 35 38
elseif               : 34 37
estrcontrol          : 3
expression           : 14 54 57 57 58 58 59 59 70 72 83 84
factor               : 76 78 80
for                  : 25
funcion              : 2 100 101
if                   : 24
instruccion          : 6 7
instrucciones        : 1 7 33 34 35 36 37 38 39 41 42 43 44 45 47 48 49 51 51 52 52 53 53 53 85 87
metodo_cuerpo_class  : 91 92 99
metodos_class        : 101 102 104
operadores           : 18 41
switch               : 28
term                 : 70 72 74 76 78
throw                : 
trycatch             : 
valor                : 56 95
var_class            : 98
while                : 26

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . instrucciones
    (2) cuerpo -> . funcion
    (3) cuerpo -> . estrcontrol
    (4) cuerpo -> . def_clase
    (5) cuerpo -> . constructor
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (85) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER
    (24) estrcontrol -> . if
    (25) estrcontrol -> . for
    (26) estrcontrol -> . while
    (27) estrcontrol -> . dowhile
    (28) estrcontrol -> . switch
    (105) def_clase -> . CLASS VARIABLE LIZQ cuerpo_class LDER
    (106) def_clase -> . CLASS VARIABLE LIZQ LDER
    (91) constructor -> . CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER
    (92) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER
    (93) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ LDER
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (33) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (34) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (35) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (41) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (43) for -> . FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (44) while -> . WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
    (45) dowhile -> . DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
    (46) switch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    FUNCTION        shift and go to state 13
    CLASS           shift and go to state 21
    CONSTRUCTOR     shift and go to state 22
    IF              shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    SWITCH          shift and go to state 33
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    cuerpo                         shift and go to state 1
    instrucciones                  shift and go to state 2
    funcion                        shift and go to state 3
    estrcontrol                    shift and go to state 4
    def_clase                      shift and go to state 5
    constructor                    shift and go to state 6
    instruccion                    shift and go to state 7
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    dowhile                        shift and go to state 19
    switch                         shift and go to state 20
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> instrucciones .

    $end            reduce using rule 1 (cuerpo -> instrucciones .)
    LDER            reduce using rule 1 (cuerpo -> instrucciones .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)
    LDER            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (3) cuerpo -> estrcontrol .

    $end            reduce using rule 3 (cuerpo -> estrcontrol .)
    LDER            reduce using rule 3 (cuerpo -> estrcontrol .)


state 5

    (4) cuerpo -> def_clase .

    $end            reduce using rule 4 (cuerpo -> def_clase .)
    LDER            reduce using rule 4 (cuerpo -> def_clase .)


state 6

    (5) cuerpo -> constructor .

    $end            reduce using rule 5 (cuerpo -> constructor .)
    LDER            reduce using rule 5 (cuerpo -> constructor .)


state 7

    (6) instrucciones -> instruccion . PUNTOYCOMA
    (7) instrucciones -> instruccion . PUNTOYCOMA instrucciones

    PUNTOYCOMA      shift and go to state 42


state 8

    (8) instrucciones -> BREAK . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 43


state 9

    (9) instrucciones -> CONTINUE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 44


state 10

    (10) instrucciones -> RETURN . VARIABLE PUNTOYCOMA

    VARIABLE        shift and go to state 45


state 11

    (12) instrucciones -> VARIABLE . INSTANCEOF VARIABLE
    (54) asignacion -> VARIABLE . IGUAL expression
    (55) asignacion -> VARIABLE . IGUAL comparacion
    (56) asignacion -> VARIABLE . IGUAL valor
    (71) expression -> VARIABLE . SUMA VARIABLE
    (73) expression -> VARIABLE . RESTA VARIABLE
    (75) expression -> VARIABLE .
    (61) comparacion -> VARIABLE . comparador ENTERO
    (68) operadores -> VARIABLE . DSUMA
    (69) operadores -> VARIABLE . DRESTA
    (77) term -> VARIABLE . MULTI VARIABLE
    (79) term -> VARIABLE . RESTA VARIABLE
    (62) comparador -> . MAYOR
    (63) comparador -> . MENOR
    (64) comparador -> . MAYIGUAL
    (65) comparador -> . MENIGUAL
    (66) comparador -> . DIGUAL
    (67) comparador -> . NOIGUAL

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
    INSTANCEOF      shift and go to state 46
    IGUAL           shift and go to state 47
    SUMA            shift and go to state 48
    RESTA           shift and go to state 49
    PUNTOYCOMA      reduce using rule 75 (expression -> VARIABLE .)
    DSUMA           shift and go to state 51
    DRESTA          shift and go to state 52
    MULTI           shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYIGUAL        shift and go to state 56
    MENIGUAL        shift and go to state 57
    DIGUAL          shift and go to state 58
    NOIGUAL         shift and go to state 59

  ! SUMA            [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 75 (expression -> VARIABLE .) ]

    comparador                     shift and go to state 50

state 12

    (11) instrucciones -> TYPEOF . VARIABLE

    VARIABLE        shift and go to state 60


state 13

    (85) funcion -> FUNCTION . VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION . VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> FUNCTION . VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> FUNCTION . VARIABLE PIZQ PDER LIZQ LDER

    VARIABLE        shift and go to state 61


state 14

    (83) expression -> PIZQ . expression PDER
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    VARIABLE        shift and go to state 63
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    expression                     shift and go to state 62
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 15

    (84) expression -> LIZQ . expression LDER
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    VARIABLE        shift and go to state 63
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    expression                     shift and go to state 64
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 16

    (24) estrcontrol -> if .

    $end            reduce using rule 24 (estrcontrol -> if .)
    LDER            reduce using rule 24 (estrcontrol -> if .)


state 17

    (25) estrcontrol -> for .

    $end            reduce using rule 25 (estrcontrol -> for .)
    LDER            reduce using rule 25 (estrcontrol -> for .)


state 18

    (26) estrcontrol -> while .

    $end            reduce using rule 26 (estrcontrol -> while .)
    LDER            reduce using rule 26 (estrcontrol -> while .)


state 19

    (27) estrcontrol -> dowhile .

    $end            reduce using rule 27 (estrcontrol -> dowhile .)
    LDER            reduce using rule 27 (estrcontrol -> dowhile .)


state 20

    (28) estrcontrol -> switch .

    $end            reduce using rule 28 (estrcontrol -> switch .)
    LDER            reduce using rule 28 (estrcontrol -> switch .)


state 21

    (105) def_clase -> CLASS . VARIABLE LIZQ cuerpo_class LDER
    (106) def_clase -> CLASS . VARIABLE LIZQ LDER

    VARIABLE        shift and go to state 65


state 22

    (91) constructor -> CONSTRUCTOR . PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER
    (92) constructor -> CONSTRUCTOR . PIZQ PDER LIZQ metodo_cuerpo_class LDER
    (93) constructor -> CONSTRUCTOR . PIZQ PDER LIZQ LDER

    PIZQ            shift and go to state 66


state 23

    (13) instruccion -> asignacion .

    PUNTOYCOMA      reduce using rule 13 (instruccion -> asignacion .)


state 24

    (14) instruccion -> expression .
    (70) expression -> expression . SUMA term
    (72) expression -> expression . RESTA term
    (57) comparacion -> expression . comparador expression
    (58) comparacion -> expression . comparador expression DAMPERSAND comparacion
    (59) comparacion -> expression . comparador expression DTUBO comparacion
    (62) comparador -> . MAYOR
    (63) comparador -> . MENOR
    (64) comparador -> . MAYIGUAL
    (65) comparador -> . MENIGUAL
    (66) comparador -> . DIGUAL
    (67) comparador -> . NOIGUAL

    PUNTOYCOMA      reduce using rule 14 (instruccion -> expression .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYIGUAL        shift and go to state 56
    MENIGUAL        shift and go to state 57
    DIGUAL          shift and go to state 58
    NOIGUAL         shift and go to state 59

    comparador                     shift and go to state 69

state 25

    (15) instruccion -> comparacion .

    PUNTOYCOMA      reduce using rule 15 (instruccion -> comparacion .)


state 26

    (16) instruccion -> declaracion .

    PUNTOYCOMA      reduce using rule 16 (instruccion -> declaracion .)


state 27

    (17) instruccion -> declaasig .

    PUNTOYCOMA      reduce using rule 17 (instruccion -> declaasig .)


state 28

    (18) instruccion -> operadores .

    PUNTOYCOMA      reduce using rule 18 (instruccion -> operadores .)


state 29

    (33) if -> IF . PIZQ comparacion PDER LIZQ instrucciones LDER
    (34) if -> IF . PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (35) if -> IF . PIZQ comparacion PDER LIZQ instrucciones LDER else

    PIZQ            shift and go to state 70


state 30

    (41) for -> FOR . PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> FOR . PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (43) for -> FOR . PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER

    PIZQ            shift and go to state 71


state 31

    (44) while -> WHILE . PIZQ comparacion PDER LIZQ instrucciones LDER

    PIZQ            shift and go to state 72


state 32

    (45) dowhile -> DO . LIZQ instrucciones LDER WHILE PIZQ comparacion PDER

    LIZQ            shift and go to state 73


state 33

    (46) switch -> SWITCH . PIZQ VARIABLE PDER LIZQ cases LDER

    PIZQ            shift and go to state 74


state 34

    (74) expression -> term .
    (76) term -> term . MULTI factor
    (78) term -> term . DIV factor

    SUMA            reduce using rule 74 (expression -> term .)
    RESTA           reduce using rule 74 (expression -> term .)
    MAYOR           reduce using rule 74 (expression -> term .)
    MENOR           reduce using rule 74 (expression -> term .)
    MAYIGUAL        reduce using rule 74 (expression -> term .)
    MENIGUAL        reduce using rule 74 (expression -> term .)
    DIGUAL          reduce using rule 74 (expression -> term .)
    NOIGUAL         reduce using rule 74 (expression -> term .)
    PUNTOYCOMA      reduce using rule 74 (expression -> term .)
    PDER            reduce using rule 74 (expression -> term .)
    LDER            reduce using rule 74 (expression -> term .)
    DAMPERSAND      reduce using rule 74 (expression -> term .)
    DTUBO           reduce using rule 74 (expression -> term .)
    MULTI           shift and go to state 75
    DIV             shift and go to state 76


state 35

    (60) comparacion -> STRING . DIGUAL STRING

    DIGUAL          shift and go to state 77


state 36

    (81) factor -> ENTERO .

    MULTI           reduce using rule 81 (factor -> ENTERO .)
    DIV             reduce using rule 81 (factor -> ENTERO .)
    SUMA            reduce using rule 81 (factor -> ENTERO .)
    RESTA           reduce using rule 81 (factor -> ENTERO .)
    MAYOR           reduce using rule 81 (factor -> ENTERO .)
    MENOR           reduce using rule 81 (factor -> ENTERO .)
    MAYIGUAL        reduce using rule 81 (factor -> ENTERO .)
    MENIGUAL        reduce using rule 81 (factor -> ENTERO .)
    DIGUAL          reduce using rule 81 (factor -> ENTERO .)
    NOIGUAL         reduce using rule 81 (factor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 81 (factor -> ENTERO .)
    PDER            reduce using rule 81 (factor -> ENTERO .)
    LDER            reduce using rule 81 (factor -> ENTERO .)
    DAMPERSAND      reduce using rule 81 (factor -> ENTERO .)
    DTUBO           reduce using rule 81 (factor -> ENTERO .)


state 37

    (19) declaracion -> VAR . VARIABLE
    (21) declaasig -> VAR . asignacion
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 78

    asignacion                     shift and go to state 79

state 38

    (20) declaracion -> LET . VARIABLE
    (22) declaasig -> LET . asignacion
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 80

    asignacion                     shift and go to state 81

state 39

    (23) declaasig -> CONST . asignacion
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 83

    asignacion                     shift and go to state 82

state 40

    (80) term -> factor .

    MULTI           reduce using rule 80 (term -> factor .)
    DIV             reduce using rule 80 (term -> factor .)
    SUMA            reduce using rule 80 (term -> factor .)
    RESTA           reduce using rule 80 (term -> factor .)
    MAYOR           reduce using rule 80 (term -> factor .)
    MENOR           reduce using rule 80 (term -> factor .)
    MAYIGUAL        reduce using rule 80 (term -> factor .)
    MENIGUAL        reduce using rule 80 (term -> factor .)
    DIGUAL          reduce using rule 80 (term -> factor .)
    NOIGUAL         reduce using rule 80 (term -> factor .)
    PUNTOYCOMA      reduce using rule 80 (term -> factor .)
    PDER            reduce using rule 80 (term -> factor .)
    LDER            reduce using rule 80 (term -> factor .)
    DAMPERSAND      reduce using rule 80 (term -> factor .)
    DTUBO           reduce using rule 80 (term -> factor .)


state 41

    (82) factor -> FLOAT .

    MULTI           reduce using rule 82 (factor -> FLOAT .)
    DIV             reduce using rule 82 (factor -> FLOAT .)
    SUMA            reduce using rule 82 (factor -> FLOAT .)
    RESTA           reduce using rule 82 (factor -> FLOAT .)
    MAYOR           reduce using rule 82 (factor -> FLOAT .)
    MENOR           reduce using rule 82 (factor -> FLOAT .)
    MAYIGUAL        reduce using rule 82 (factor -> FLOAT .)
    MENIGUAL        reduce using rule 82 (factor -> FLOAT .)
    DIGUAL          reduce using rule 82 (factor -> FLOAT .)
    NOIGUAL         reduce using rule 82 (factor -> FLOAT .)
    PUNTOYCOMA      reduce using rule 82 (factor -> FLOAT .)
    PDER            reduce using rule 82 (factor -> FLOAT .)
    LDER            reduce using rule 82 (factor -> FLOAT .)
    DAMPERSAND      reduce using rule 82 (factor -> FLOAT .)
    DTUBO           reduce using rule 82 (factor -> FLOAT .)


state 42

    (6) instrucciones -> instruccion PUNTOYCOMA .
    (7) instrucciones -> instruccion PUNTOYCOMA . instrucciones
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    $end            reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA .)
    LDER            reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA .)
    CASE            reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA .)
    DEFAULT         reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA .)
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instruccion                    shift and go to state 7
    instrucciones                  shift and go to state 84
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 43

    (8) instrucciones -> BREAK PUNTOYCOMA .

    $end            reduce using rule 8 (instrucciones -> BREAK PUNTOYCOMA .)
    LDER            reduce using rule 8 (instrucciones -> BREAK PUNTOYCOMA .)
    CASE            reduce using rule 8 (instrucciones -> BREAK PUNTOYCOMA .)
    DEFAULT         reduce using rule 8 (instrucciones -> BREAK PUNTOYCOMA .)


state 44

    (9) instrucciones -> CONTINUE PUNTOYCOMA .

    $end            reduce using rule 9 (instrucciones -> CONTINUE PUNTOYCOMA .)
    LDER            reduce using rule 9 (instrucciones -> CONTINUE PUNTOYCOMA .)
    CASE            reduce using rule 9 (instrucciones -> CONTINUE PUNTOYCOMA .)
    DEFAULT         reduce using rule 9 (instrucciones -> CONTINUE PUNTOYCOMA .)


state 45

    (10) instrucciones -> RETURN VARIABLE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 85


state 46

    (12) instrucciones -> VARIABLE INSTANCEOF . VARIABLE

    VARIABLE        shift and go to state 86


state 47

    (54) asignacion -> VARIABLE IGUAL . expression
    (55) asignacion -> VARIABLE IGUAL . comparacion
    (56) asignacion -> VARIABLE IGUAL . valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (29) valor -> . ENTERO
    (30) valor -> . FLOAT
    (31) valor -> . STRING
    (32) valor -> . BOOL
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    VARIABLE        shift and go to state 87
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 91
    ENTERO          shift and go to state 92
    FLOAT           shift and go to state 93
    BOOL            shift and go to state 94

    expression                     shift and go to state 88
    comparacion                    shift and go to state 89
    valor                          shift and go to state 90
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 48

    (71) expression -> VARIABLE SUMA . VARIABLE

    VARIABLE        shift and go to state 95


state 49

    (73) expression -> VARIABLE RESTA . VARIABLE
    (79) term -> VARIABLE RESTA . VARIABLE

    VARIABLE        shift and go to state 96


state 50

    (61) comparacion -> VARIABLE comparador . ENTERO

    ENTERO          shift and go to state 97


state 51

    (68) operadores -> VARIABLE DSUMA .

    PUNTOYCOMA      reduce using rule 68 (operadores -> VARIABLE DSUMA .)
    PDER            reduce using rule 68 (operadores -> VARIABLE DSUMA .)


state 52

    (69) operadores -> VARIABLE DRESTA .

    PUNTOYCOMA      reduce using rule 69 (operadores -> VARIABLE DRESTA .)
    PDER            reduce using rule 69 (operadores -> VARIABLE DRESTA .)


state 53

    (77) term -> VARIABLE MULTI . VARIABLE

    VARIABLE        shift and go to state 98


state 54

    (62) comparador -> MAYOR .

    ENTERO          reduce using rule 62 (comparador -> MAYOR .)
    VARIABLE        reduce using rule 62 (comparador -> MAYOR .)
    PIZQ            reduce using rule 62 (comparador -> MAYOR .)
    LIZQ            reduce using rule 62 (comparador -> MAYOR .)
    FLOAT           reduce using rule 62 (comparador -> MAYOR .)


state 55

    (63) comparador -> MENOR .

    ENTERO          reduce using rule 63 (comparador -> MENOR .)
    VARIABLE        reduce using rule 63 (comparador -> MENOR .)
    PIZQ            reduce using rule 63 (comparador -> MENOR .)
    LIZQ            reduce using rule 63 (comparador -> MENOR .)
    FLOAT           reduce using rule 63 (comparador -> MENOR .)


state 56

    (64) comparador -> MAYIGUAL .

    ENTERO          reduce using rule 64 (comparador -> MAYIGUAL .)
    VARIABLE        reduce using rule 64 (comparador -> MAYIGUAL .)
    PIZQ            reduce using rule 64 (comparador -> MAYIGUAL .)
    LIZQ            reduce using rule 64 (comparador -> MAYIGUAL .)
    FLOAT           reduce using rule 64 (comparador -> MAYIGUAL .)


state 57

    (65) comparador -> MENIGUAL .

    ENTERO          reduce using rule 65 (comparador -> MENIGUAL .)
    VARIABLE        reduce using rule 65 (comparador -> MENIGUAL .)
    PIZQ            reduce using rule 65 (comparador -> MENIGUAL .)
    LIZQ            reduce using rule 65 (comparador -> MENIGUAL .)
    FLOAT           reduce using rule 65 (comparador -> MENIGUAL .)


state 58

    (66) comparador -> DIGUAL .

    ENTERO          reduce using rule 66 (comparador -> DIGUAL .)
    VARIABLE        reduce using rule 66 (comparador -> DIGUAL .)
    PIZQ            reduce using rule 66 (comparador -> DIGUAL .)
    LIZQ            reduce using rule 66 (comparador -> DIGUAL .)
    FLOAT           reduce using rule 66 (comparador -> DIGUAL .)


state 59

    (67) comparador -> NOIGUAL .

    ENTERO          reduce using rule 67 (comparador -> NOIGUAL .)
    VARIABLE        reduce using rule 67 (comparador -> NOIGUAL .)
    PIZQ            reduce using rule 67 (comparador -> NOIGUAL .)
    LIZQ            reduce using rule 67 (comparador -> NOIGUAL .)
    FLOAT           reduce using rule 67 (comparador -> NOIGUAL .)


state 60

    (11) instrucciones -> TYPEOF VARIABLE .

    $end            reduce using rule 11 (instrucciones -> TYPEOF VARIABLE .)
    LDER            reduce using rule 11 (instrucciones -> TYPEOF VARIABLE .)
    CASE            reduce using rule 11 (instrucciones -> TYPEOF VARIABLE .)
    DEFAULT         reduce using rule 11 (instrucciones -> TYPEOF VARIABLE .)


state 61

    (85) funcion -> FUNCTION VARIABLE . PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE . PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> FUNCTION VARIABLE . PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> FUNCTION VARIABLE . PIZQ PDER LIZQ LDER

    PIZQ            shift and go to state 99


state 62

    (83) expression -> PIZQ expression . PDER
    (70) expression -> expression . SUMA term
    (72) expression -> expression . RESTA term

    PDER            shift and go to state 100
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68


state 63

    (71) expression -> VARIABLE . SUMA VARIABLE
    (73) expression -> VARIABLE . RESTA VARIABLE
    (75) expression -> VARIABLE .
    (77) term -> VARIABLE . MULTI VARIABLE
    (79) term -> VARIABLE . RESTA VARIABLE

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    SUMA            shift and go to state 48
    RESTA           shift and go to state 49
    PDER            reduce using rule 75 (expression -> VARIABLE .)
    LDER            reduce using rule 75 (expression -> VARIABLE .)
    DAMPERSAND      reduce using rule 75 (expression -> VARIABLE .)
    DTUBO           reduce using rule 75 (expression -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (expression -> VARIABLE .)
    MULTI           shift and go to state 53

  ! SUMA            [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (expression -> VARIABLE .) ]


state 64

    (84) expression -> LIZQ expression . LDER
    (70) expression -> expression . SUMA term
    (72) expression -> expression . RESTA term

    LDER            shift and go to state 101
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68


state 65

    (105) def_clase -> CLASS VARIABLE . LIZQ cuerpo_class LDER
    (106) def_clase -> CLASS VARIABLE . LIZQ LDER

    LIZQ            shift and go to state 102


state 66

    (91) constructor -> CONSTRUCTOR PIZQ . argumentos PDER LIZQ metodo_cuerpo_class LDER
    (92) constructor -> CONSTRUCTOR PIZQ . PDER LIZQ metodo_cuerpo_class LDER
    (93) constructor -> CONSTRUCTOR PIZQ . PDER LIZQ LDER
    (89) argumentos -> . VARIABLE
    (90) argumentos -> . VARIABLE COMA argumentos

    PDER            shift and go to state 104
    VARIABLE        shift and go to state 105

    argumentos                     shift and go to state 103

state 67

    (70) expression -> expression SUMA . term
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    VARIABLE        shift and go to state 107
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    term                           shift and go to state 106
    factor                         shift and go to state 40

state 68

    (72) expression -> expression RESTA . term
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    VARIABLE        shift and go to state 107
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    term                           shift and go to state 108
    factor                         shift and go to state 40

state 69

    (57) comparacion -> expression comparador . expression
    (58) comparacion -> expression comparador . expression DAMPERSAND comparacion
    (59) comparacion -> expression comparador . expression DTUBO comparacion
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    VARIABLE        shift and go to state 63
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    expression                     shift and go to state 109
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 70

    (33) if -> IF PIZQ . comparacion PDER LIZQ instrucciones LDER
    (34) if -> IF PIZQ . comparacion PDER LIZQ instrucciones LDER elseif
    (35) if -> IF PIZQ . comparacion PDER LIZQ instrucciones LDER else
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 110
    expression                     shift and go to state 111
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 71

    (41) for -> FOR PIZQ . declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> FOR PIZQ . declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (43) for -> FOR PIZQ . declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE

    VAR             shift and go to state 115
    LET             shift and go to state 116
    CONST           shift and go to state 39

    declaasig                      shift and go to state 113
    declaracion                    shift and go to state 114

state 72

    (44) while -> WHILE PIZQ . comparacion PDER LIZQ instrucciones LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 117
    expression                     shift and go to state 111
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 73

    (45) dowhile -> DO LIZQ . instrucciones LDER WHILE PIZQ comparacion PDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instrucciones                  shift and go to state 118
    comparacion                    shift and go to state 25
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 74

    (46) switch -> SWITCH PIZQ . VARIABLE PDER LIZQ cases LDER

    VARIABLE        shift and go to state 119


state 75

    (76) term -> term MULTI . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    factor                         shift and go to state 120

state 76

    (78) term -> term DIV . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    factor                         shift and go to state 121

state 77

    (60) comparacion -> STRING DIGUAL . STRING

    STRING          shift and go to state 122


state 78

    (19) declaracion -> VAR VARIABLE .
    (54) asignacion -> VARIABLE . IGUAL expression
    (55) asignacion -> VARIABLE . IGUAL comparacion
    (56) asignacion -> VARIABLE . IGUAL valor

    PUNTOYCOMA      reduce using rule 19 (declaracion -> VAR VARIABLE .)
    IN              reduce using rule 19 (declaracion -> VAR VARIABLE .)
    IGUAL           shift and go to state 47


state 79

    (21) declaasig -> VAR asignacion .

    PUNTOYCOMA      reduce using rule 21 (declaasig -> VAR asignacion .)


state 80

    (20) declaracion -> LET VARIABLE .
    (54) asignacion -> VARIABLE . IGUAL expression
    (55) asignacion -> VARIABLE . IGUAL comparacion
    (56) asignacion -> VARIABLE . IGUAL valor

    PUNTOYCOMA      reduce using rule 20 (declaracion -> LET VARIABLE .)
    IN              reduce using rule 20 (declaracion -> LET VARIABLE .)
    IGUAL           shift and go to state 47


state 81

    (22) declaasig -> LET asignacion .

    PUNTOYCOMA      reduce using rule 22 (declaasig -> LET asignacion .)


state 82

    (23) declaasig -> CONST asignacion .

    PUNTOYCOMA      reduce using rule 23 (declaasig -> CONST asignacion .)


state 83

    (54) asignacion -> VARIABLE . IGUAL expression
    (55) asignacion -> VARIABLE . IGUAL comparacion
    (56) asignacion -> VARIABLE . IGUAL valor

    IGUAL           shift and go to state 47


state 84

    (7) instrucciones -> instruccion PUNTOYCOMA instrucciones .

    $end            reduce using rule 7 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)
    LDER            reduce using rule 7 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)
    CASE            reduce using rule 7 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)
    DEFAULT         reduce using rule 7 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)


state 85

    (10) instrucciones -> RETURN VARIABLE PUNTOYCOMA .

    $end            reduce using rule 10 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)
    LDER            reduce using rule 10 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)
    CASE            reduce using rule 10 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)
    DEFAULT         reduce using rule 10 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)


state 86

    (12) instrucciones -> VARIABLE INSTANCEOF VARIABLE .

    $end            reduce using rule 12 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)
    LDER            reduce using rule 12 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)
    CASE            reduce using rule 12 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)
    DEFAULT         reduce using rule 12 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)


state 87

    (71) expression -> VARIABLE . SUMA VARIABLE
    (73) expression -> VARIABLE . RESTA VARIABLE
    (75) expression -> VARIABLE .
    (61) comparacion -> VARIABLE . comparador ENTERO
    (77) term -> VARIABLE . MULTI VARIABLE
    (79) term -> VARIABLE . RESTA VARIABLE
    (62) comparador -> . MAYOR
    (63) comparador -> . MENOR
    (64) comparador -> . MAYIGUAL
    (65) comparador -> . MENIGUAL
    (66) comparador -> . DIGUAL
    (67) comparador -> . NOIGUAL

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
    SUMA            shift and go to state 48
    RESTA           shift and go to state 49
    PUNTOYCOMA      reduce using rule 75 (expression -> VARIABLE .)
    PDER            reduce using rule 75 (expression -> VARIABLE .)
    MULTI           shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYIGUAL        shift and go to state 56
    MENIGUAL        shift and go to state 57
    DIGUAL          shift and go to state 58
    NOIGUAL         shift and go to state 59

  ! SUMA            [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 75 (expression -> VARIABLE .) ]

    comparador                     shift and go to state 50

state 88

    (54) asignacion -> VARIABLE IGUAL expression .
    (70) expression -> expression . SUMA term
    (72) expression -> expression . RESTA term
    (57) comparacion -> expression . comparador expression
    (58) comparacion -> expression . comparador expression DAMPERSAND comparacion
    (59) comparacion -> expression . comparador expression DTUBO comparacion
    (62) comparador -> . MAYOR
    (63) comparador -> . MENOR
    (64) comparador -> . MAYIGUAL
    (65) comparador -> . MENIGUAL
    (66) comparador -> . DIGUAL
    (67) comparador -> . NOIGUAL

    PUNTOYCOMA      reduce using rule 54 (asignacion -> VARIABLE IGUAL expression .)
    PDER            reduce using rule 54 (asignacion -> VARIABLE IGUAL expression .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYIGUAL        shift and go to state 56
    MENIGUAL        shift and go to state 57
    DIGUAL          shift and go to state 58
    NOIGUAL         shift and go to state 59

    comparador                     shift and go to state 69

state 89

    (55) asignacion -> VARIABLE IGUAL comparacion .

    PUNTOYCOMA      reduce using rule 55 (asignacion -> VARIABLE IGUAL comparacion .)
    PDER            reduce using rule 55 (asignacion -> VARIABLE IGUAL comparacion .)


state 90

    (56) asignacion -> VARIABLE IGUAL valor .

    PUNTOYCOMA      reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    PDER            reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)


state 91

    (60) comparacion -> STRING . DIGUAL STRING
    (31) valor -> STRING .

    DIGUAL          shift and go to state 77
    PUNTOYCOMA      reduce using rule 31 (valor -> STRING .)
    PDER            reduce using rule 31 (valor -> STRING .)


state 92

    (29) valor -> ENTERO .
    (81) factor -> ENTERO .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 29 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 29 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 29 (valor -> ENTERO .)
    PDER            reduce using rule 29 (valor -> ENTERO .)
    MULTI           reduce using rule 81 (factor -> ENTERO .)
    DIV             reduce using rule 81 (factor -> ENTERO .)
    SUMA            reduce using rule 81 (factor -> ENTERO .)
    RESTA           reduce using rule 81 (factor -> ENTERO .)
    MAYOR           reduce using rule 81 (factor -> ENTERO .)
    MENOR           reduce using rule 81 (factor -> ENTERO .)
    MAYIGUAL        reduce using rule 81 (factor -> ENTERO .)
    MENIGUAL        reduce using rule 81 (factor -> ENTERO .)
    DIGUAL          reduce using rule 81 (factor -> ENTERO .)
    NOIGUAL         reduce using rule 81 (factor -> ENTERO .)

  ! PUNTOYCOMA      [ reduce using rule 81 (factor -> ENTERO .) ]
  ! PDER            [ reduce using rule 81 (factor -> ENTERO .) ]


state 93

    (30) valor -> FLOAT .
    (82) factor -> FLOAT .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 30 (valor -> FLOAT .)
  ! reduce/reduce conflict for PDER resolved using rule 30 (valor -> FLOAT .)
    PUNTOYCOMA      reduce using rule 30 (valor -> FLOAT .)
    PDER            reduce using rule 30 (valor -> FLOAT .)
    MULTI           reduce using rule 82 (factor -> FLOAT .)
    DIV             reduce using rule 82 (factor -> FLOAT .)
    SUMA            reduce using rule 82 (factor -> FLOAT .)
    RESTA           reduce using rule 82 (factor -> FLOAT .)
    MAYOR           reduce using rule 82 (factor -> FLOAT .)
    MENOR           reduce using rule 82 (factor -> FLOAT .)
    MAYIGUAL        reduce using rule 82 (factor -> FLOAT .)
    MENIGUAL        reduce using rule 82 (factor -> FLOAT .)
    DIGUAL          reduce using rule 82 (factor -> FLOAT .)
    NOIGUAL         reduce using rule 82 (factor -> FLOAT .)

  ! PUNTOYCOMA      [ reduce using rule 82 (factor -> FLOAT .) ]
  ! PDER            [ reduce using rule 82 (factor -> FLOAT .) ]


state 94

    (32) valor -> BOOL .

    PUNTOYCOMA      reduce using rule 32 (valor -> BOOL .)
    PDER            reduce using rule 32 (valor -> BOOL .)
    LDER            reduce using rule 32 (valor -> BOOL .)


state 95

    (71) expression -> VARIABLE SUMA VARIABLE .

    SUMA            reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    RESTA           reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    MAYOR           reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    MENOR           reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    MAYIGUAL        reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    MENIGUAL        reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    DIGUAL          reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    NOIGUAL         reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    PUNTOYCOMA      reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    PDER            reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    LDER            reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    DAMPERSAND      reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)
    DTUBO           reduce using rule 71 (expression -> VARIABLE SUMA VARIABLE .)


state 96

    (73) expression -> VARIABLE RESTA VARIABLE .
    (79) term -> VARIABLE RESTA VARIABLE .

  ! reduce/reduce conflict for SUMA resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MAYIGUAL resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MENIGUAL resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for DIGUAL resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for DAMPERSAND resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for DTUBO resolved using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    SUMA            reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    RESTA           reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    MAYOR           reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    MENOR           reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    MAYIGUAL        reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    MENIGUAL        reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    DIGUAL          reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    NOIGUAL         reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    PUNTOYCOMA      reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    PDER            reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    LDER            reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    DAMPERSAND      reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    DTUBO           reduce using rule 73 (expression -> VARIABLE RESTA VARIABLE .)
    MULTI           reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    DIV             reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)

  ! SUMA            [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! RESTA           [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MAYOR           [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MENOR           [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! PDER            [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! LDER            [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! DAMPERSAND      [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]
  ! DTUBO           [ reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .) ]


state 97

    (61) comparacion -> VARIABLE comparador ENTERO .

    PUNTOYCOMA      reduce using rule 61 (comparacion -> VARIABLE comparador ENTERO .)
    PDER            reduce using rule 61 (comparacion -> VARIABLE comparador ENTERO .)


state 98

    (77) term -> VARIABLE MULTI VARIABLE .

    MULTI           reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    DIV             reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    SUMA            reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    RESTA           reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    MAYOR           reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    MENOR           reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    MAYIGUAL        reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    MENIGUAL        reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    DIGUAL          reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    NOIGUAL         reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    PUNTOYCOMA      reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    PDER            reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    LDER            reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    DAMPERSAND      reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)
    DTUBO           reduce using rule 77 (term -> VARIABLE MULTI VARIABLE .)


state 99

    (85) funcion -> FUNCTION VARIABLE PIZQ . argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ . argumentos PDER LIZQ LDER
    (87) funcion -> FUNCTION VARIABLE PIZQ . PDER LIZQ instrucciones LDER
    (88) funcion -> FUNCTION VARIABLE PIZQ . PDER LIZQ LDER
    (89) argumentos -> . VARIABLE
    (90) argumentos -> . VARIABLE COMA argumentos

    PDER            shift and go to state 124
    VARIABLE        shift and go to state 105

    argumentos                     shift and go to state 123

state 100

    (83) expression -> PIZQ expression PDER .

    SUMA            reduce using rule 83 (expression -> PIZQ expression PDER .)
    RESTA           reduce using rule 83 (expression -> PIZQ expression PDER .)
    MAYOR           reduce using rule 83 (expression -> PIZQ expression PDER .)
    MENOR           reduce using rule 83 (expression -> PIZQ expression PDER .)
    MAYIGUAL        reduce using rule 83 (expression -> PIZQ expression PDER .)
    MENIGUAL        reduce using rule 83 (expression -> PIZQ expression PDER .)
    DIGUAL          reduce using rule 83 (expression -> PIZQ expression PDER .)
    NOIGUAL         reduce using rule 83 (expression -> PIZQ expression PDER .)
    PUNTOYCOMA      reduce using rule 83 (expression -> PIZQ expression PDER .)
    PDER            reduce using rule 83 (expression -> PIZQ expression PDER .)
    LDER            reduce using rule 83 (expression -> PIZQ expression PDER .)
    DAMPERSAND      reduce using rule 83 (expression -> PIZQ expression PDER .)
    DTUBO           reduce using rule 83 (expression -> PIZQ expression PDER .)


state 101

    (84) expression -> LIZQ expression LDER .

    SUMA            reduce using rule 84 (expression -> LIZQ expression LDER .)
    RESTA           reduce using rule 84 (expression -> LIZQ expression LDER .)
    MAYOR           reduce using rule 84 (expression -> LIZQ expression LDER .)
    MENOR           reduce using rule 84 (expression -> LIZQ expression LDER .)
    MAYIGUAL        reduce using rule 84 (expression -> LIZQ expression LDER .)
    MENIGUAL        reduce using rule 84 (expression -> LIZQ expression LDER .)
    DIGUAL          reduce using rule 84 (expression -> LIZQ expression LDER .)
    NOIGUAL         reduce using rule 84 (expression -> LIZQ expression LDER .)
    PUNTOYCOMA      reduce using rule 84 (expression -> LIZQ expression LDER .)
    PDER            reduce using rule 84 (expression -> LIZQ expression LDER .)
    LDER            reduce using rule 84 (expression -> LIZQ expression LDER .)
    DAMPERSAND      reduce using rule 84 (expression -> LIZQ expression LDER .)
    DTUBO           reduce using rule 84 (expression -> LIZQ expression LDER .)


state 102

    (105) def_clase -> CLASS VARIABLE LIZQ . cuerpo_class LDER
    (106) def_clase -> CLASS VARIABLE LIZQ . LDER
    (102) cuerpo_class -> . metodos_class
    (103) cuerpo_class -> . constructor
    (104) cuerpo_class -> . constructor metodos_class
    (100) metodos_class -> . funcion
    (101) metodos_class -> . funcion metodos_class
    (91) constructor -> . CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER
    (92) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER
    (93) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER

    LDER            shift and go to state 126
    CONSTRUCTOR     shift and go to state 22
    FUNCTION        shift and go to state 13

    cuerpo_class                   shift and go to state 125
    metodos_class                  shift and go to state 127
    constructor                    shift and go to state 128
    funcion                        shift and go to state 129

state 103

    (91) constructor -> CONSTRUCTOR PIZQ argumentos . PDER LIZQ metodo_cuerpo_class LDER

    PDER            shift and go to state 130


state 104

    (92) constructor -> CONSTRUCTOR PIZQ PDER . LIZQ metodo_cuerpo_class LDER
    (93) constructor -> CONSTRUCTOR PIZQ PDER . LIZQ LDER

    LIZQ            shift and go to state 131


state 105

    (89) argumentos -> VARIABLE .
    (90) argumentos -> VARIABLE . COMA argumentos

    PDER            reduce using rule 89 (argumentos -> VARIABLE .)
    COMA            shift and go to state 132


state 106

    (70) expression -> expression SUMA term .
    (76) term -> term . MULTI factor
    (78) term -> term . DIV factor

    SUMA            reduce using rule 70 (expression -> expression SUMA term .)
    RESTA           reduce using rule 70 (expression -> expression SUMA term .)
    MAYOR           reduce using rule 70 (expression -> expression SUMA term .)
    MENOR           reduce using rule 70 (expression -> expression SUMA term .)
    MAYIGUAL        reduce using rule 70 (expression -> expression SUMA term .)
    MENIGUAL        reduce using rule 70 (expression -> expression SUMA term .)
    DIGUAL          reduce using rule 70 (expression -> expression SUMA term .)
    NOIGUAL         reduce using rule 70 (expression -> expression SUMA term .)
    PUNTOYCOMA      reduce using rule 70 (expression -> expression SUMA term .)
    PDER            reduce using rule 70 (expression -> expression SUMA term .)
    LDER            reduce using rule 70 (expression -> expression SUMA term .)
    DAMPERSAND      reduce using rule 70 (expression -> expression SUMA term .)
    DTUBO           reduce using rule 70 (expression -> expression SUMA term .)
    MULTI           shift and go to state 75
    DIV             shift and go to state 76


state 107

    (77) term -> VARIABLE . MULTI VARIABLE
    (79) term -> VARIABLE . RESTA VARIABLE

    MULTI           shift and go to state 53
    RESTA           shift and go to state 133


state 108

    (72) expression -> expression RESTA term .
    (76) term -> term . MULTI factor
    (78) term -> term . DIV factor

    SUMA            reduce using rule 72 (expression -> expression RESTA term .)
    RESTA           reduce using rule 72 (expression -> expression RESTA term .)
    MAYOR           reduce using rule 72 (expression -> expression RESTA term .)
    MENOR           reduce using rule 72 (expression -> expression RESTA term .)
    MAYIGUAL        reduce using rule 72 (expression -> expression RESTA term .)
    MENIGUAL        reduce using rule 72 (expression -> expression RESTA term .)
    DIGUAL          reduce using rule 72 (expression -> expression RESTA term .)
    NOIGUAL         reduce using rule 72 (expression -> expression RESTA term .)
    PUNTOYCOMA      reduce using rule 72 (expression -> expression RESTA term .)
    PDER            reduce using rule 72 (expression -> expression RESTA term .)
    LDER            reduce using rule 72 (expression -> expression RESTA term .)
    DAMPERSAND      reduce using rule 72 (expression -> expression RESTA term .)
    DTUBO           reduce using rule 72 (expression -> expression RESTA term .)
    MULTI           shift and go to state 75
    DIV             shift and go to state 76


state 109

    (57) comparacion -> expression comparador expression .
    (58) comparacion -> expression comparador expression . DAMPERSAND comparacion
    (59) comparacion -> expression comparador expression . DTUBO comparacion
    (70) expression -> expression . SUMA term
    (72) expression -> expression . RESTA term

    PUNTOYCOMA      reduce using rule 57 (comparacion -> expression comparador expression .)
    PDER            reduce using rule 57 (comparacion -> expression comparador expression .)
    DAMPERSAND      shift and go to state 134
    DTUBO           shift and go to state 135
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68


state 110

    (33) if -> IF PIZQ comparacion . PDER LIZQ instrucciones LDER
    (34) if -> IF PIZQ comparacion . PDER LIZQ instrucciones LDER elseif
    (35) if -> IF PIZQ comparacion . PDER LIZQ instrucciones LDER else

    PDER            shift and go to state 136


state 111

    (57) comparacion -> expression . comparador expression
    (58) comparacion -> expression . comparador expression DAMPERSAND comparacion
    (59) comparacion -> expression . comparador expression DTUBO comparacion
    (70) expression -> expression . SUMA term
    (72) expression -> expression . RESTA term
    (62) comparador -> . MAYOR
    (63) comparador -> . MENOR
    (64) comparador -> . MAYIGUAL
    (65) comparador -> . MENIGUAL
    (66) comparador -> . DIGUAL
    (67) comparador -> . NOIGUAL

    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYIGUAL        shift and go to state 56
    MENIGUAL        shift and go to state 57
    DIGUAL          shift and go to state 58
    NOIGUAL         shift and go to state 59

    comparador                     shift and go to state 69

state 112

    (61) comparacion -> VARIABLE . comparador ENTERO
    (71) expression -> VARIABLE . SUMA VARIABLE
    (73) expression -> VARIABLE . RESTA VARIABLE
    (75) expression -> VARIABLE .
    (77) term -> VARIABLE . MULTI VARIABLE
    (79) term -> VARIABLE . RESTA VARIABLE
    (62) comparador -> . MAYOR
    (63) comparador -> . MENOR
    (64) comparador -> . MAYIGUAL
    (65) comparador -> . MENIGUAL
    (66) comparador -> . DIGUAL
    (67) comparador -> . NOIGUAL

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
    SUMA            shift and go to state 48
    RESTA           shift and go to state 49
    MULTI           shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYIGUAL        shift and go to state 56
    MENIGUAL        shift and go to state 57
    DIGUAL          shift and go to state 58
    NOIGUAL         shift and go to state 59

  ! SUMA            [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 75 (expression -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 75 (expression -> VARIABLE .) ]

    comparador                     shift and go to state 50

state 113

    (41) for -> FOR PIZQ declaasig . PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> FOR PIZQ declaasig . PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER

    PUNTOYCOMA      shift and go to state 137


state 114

    (43) for -> FOR PIZQ declaracion . IN VARIABLE PDER LIZQ instrucciones LDER

    IN              shift and go to state 138


state 115

    (21) declaasig -> VAR . asignacion
    (19) declaracion -> VAR . VARIABLE
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 78

    asignacion                     shift and go to state 79

state 116

    (22) declaasig -> LET . asignacion
    (20) declaracion -> LET . VARIABLE
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 80

    asignacion                     shift and go to state 81

state 117

    (44) while -> WHILE PIZQ comparacion . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 139


state 118

    (45) dowhile -> DO LIZQ instrucciones . LDER WHILE PIZQ comparacion PDER

    LDER            shift and go to state 140


state 119

    (46) switch -> SWITCH PIZQ VARIABLE . PDER LIZQ cases LDER

    PDER            shift and go to state 141


state 120

    (76) term -> term MULTI factor .

    MULTI           reduce using rule 76 (term -> term MULTI factor .)
    DIV             reduce using rule 76 (term -> term MULTI factor .)
    SUMA            reduce using rule 76 (term -> term MULTI factor .)
    RESTA           reduce using rule 76 (term -> term MULTI factor .)
    MAYOR           reduce using rule 76 (term -> term MULTI factor .)
    MENOR           reduce using rule 76 (term -> term MULTI factor .)
    MAYIGUAL        reduce using rule 76 (term -> term MULTI factor .)
    MENIGUAL        reduce using rule 76 (term -> term MULTI factor .)
    DIGUAL          reduce using rule 76 (term -> term MULTI factor .)
    NOIGUAL         reduce using rule 76 (term -> term MULTI factor .)
    PUNTOYCOMA      reduce using rule 76 (term -> term MULTI factor .)
    PDER            reduce using rule 76 (term -> term MULTI factor .)
    LDER            reduce using rule 76 (term -> term MULTI factor .)
    DAMPERSAND      reduce using rule 76 (term -> term MULTI factor .)
    DTUBO           reduce using rule 76 (term -> term MULTI factor .)


state 121

    (78) term -> term DIV factor .

    MULTI           reduce using rule 78 (term -> term DIV factor .)
    DIV             reduce using rule 78 (term -> term DIV factor .)
    SUMA            reduce using rule 78 (term -> term DIV factor .)
    RESTA           reduce using rule 78 (term -> term DIV factor .)
    MAYOR           reduce using rule 78 (term -> term DIV factor .)
    MENOR           reduce using rule 78 (term -> term DIV factor .)
    MAYIGUAL        reduce using rule 78 (term -> term DIV factor .)
    MENIGUAL        reduce using rule 78 (term -> term DIV factor .)
    DIGUAL          reduce using rule 78 (term -> term DIV factor .)
    NOIGUAL         reduce using rule 78 (term -> term DIV factor .)
    PUNTOYCOMA      reduce using rule 78 (term -> term DIV factor .)
    PDER            reduce using rule 78 (term -> term DIV factor .)
    LDER            reduce using rule 78 (term -> term DIV factor .)
    DAMPERSAND      reduce using rule 78 (term -> term DIV factor .)
    DTUBO           reduce using rule 78 (term -> term DIV factor .)


state 122

    (60) comparacion -> STRING DIGUAL STRING .

    PUNTOYCOMA      reduce using rule 60 (comparacion -> STRING DIGUAL STRING .)
    PDER            reduce using rule 60 (comparacion -> STRING DIGUAL STRING .)


state 123

    (85) funcion -> FUNCTION VARIABLE PIZQ argumentos . PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ argumentos . PDER LIZQ LDER

    PDER            shift and go to state 142


state 124

    (87) funcion -> FUNCTION VARIABLE PIZQ PDER . LIZQ instrucciones LDER
    (88) funcion -> FUNCTION VARIABLE PIZQ PDER . LIZQ LDER

    LIZQ            shift and go to state 143


state 125

    (105) def_clase -> CLASS VARIABLE LIZQ cuerpo_class . LDER

    LDER            shift and go to state 144


state 126

    (106) def_clase -> CLASS VARIABLE LIZQ LDER .

    $end            reduce using rule 106 (def_clase -> CLASS VARIABLE LIZQ LDER .)
    LDER            reduce using rule 106 (def_clase -> CLASS VARIABLE LIZQ LDER .)


state 127

    (102) cuerpo_class -> metodos_class .

    LDER            reduce using rule 102 (cuerpo_class -> metodos_class .)


state 128

    (103) cuerpo_class -> constructor .
    (104) cuerpo_class -> constructor . metodos_class
    (100) metodos_class -> . funcion
    (101) metodos_class -> . funcion metodos_class
    (85) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER

    LDER            reduce using rule 103 (cuerpo_class -> constructor .)
    FUNCTION        shift and go to state 13

    metodos_class                  shift and go to state 145
    funcion                        shift and go to state 129

state 129

    (100) metodos_class -> funcion .
    (101) metodos_class -> funcion . metodos_class
    (100) metodos_class -> . funcion
    (101) metodos_class -> . funcion metodos_class
    (85) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER

    LDER            reduce using rule 100 (metodos_class -> funcion .)
    FUNCTION        shift and go to state 13

    funcion                        shift and go to state 129
    metodos_class                  shift and go to state 146

state 130

    (91) constructor -> CONSTRUCTOR PIZQ argumentos PDER . LIZQ metodo_cuerpo_class LDER

    LIZQ            shift and go to state 147


state 131

    (92) constructor -> CONSTRUCTOR PIZQ PDER LIZQ . metodo_cuerpo_class LDER
    (93) constructor -> CONSTRUCTOR PIZQ PDER LIZQ . LDER
    (97) metodo_cuerpo_class -> . cuerpo
    (98) metodo_cuerpo_class -> . var_class
    (99) metodo_cuerpo_class -> . metodo_cuerpo_class
    (1) cuerpo -> . instrucciones
    (2) cuerpo -> . funcion
    (3) cuerpo -> . estrcontrol
    (4) cuerpo -> . def_clase
    (5) cuerpo -> . constructor
    (94) var_class -> . THIS PUNTO VARIABLE
    (95) var_class -> . THIS PUNTO VARIABLE IGUAL valor
    (96) var_class -> . THIS PUNTO VARIABLE IGUAL VARIABLE
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (85) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER
    (24) estrcontrol -> . if
    (25) estrcontrol -> . for
    (26) estrcontrol -> . while
    (27) estrcontrol -> . dowhile
    (28) estrcontrol -> . switch
    (105) def_clase -> . CLASS VARIABLE LIZQ cuerpo_class LDER
    (106) def_clase -> . CLASS VARIABLE LIZQ LDER
    (91) constructor -> . CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER
    (92) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER
    (93) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ LDER
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (33) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (34) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (35) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (41) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (43) for -> . FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (44) while -> . WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
    (45) dowhile -> . DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
    (46) switch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    LDER            shift and go to state 149
    THIS            shift and go to state 152
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    FUNCTION        shift and go to state 13
    CLASS           shift and go to state 21
    CONSTRUCTOR     shift and go to state 22
    IF              shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    SWITCH          shift and go to state 33
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    metodo_cuerpo_class            shift and go to state 148
    cuerpo                         shift and go to state 150
    var_class                      shift and go to state 151
    instrucciones                  shift and go to state 2
    funcion                        shift and go to state 3
    estrcontrol                    shift and go to state 4
    def_clase                      shift and go to state 5
    constructor                    shift and go to state 6
    instruccion                    shift and go to state 7
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    dowhile                        shift and go to state 19
    switch                         shift and go to state 20
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 132

    (90) argumentos -> VARIABLE COMA . argumentos
    (89) argumentos -> . VARIABLE
    (90) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 105

    argumentos                     shift and go to state 153

state 133

    (79) term -> VARIABLE RESTA . VARIABLE

    VARIABLE        shift and go to state 154


state 134

    (58) comparacion -> expression comparador expression DAMPERSAND . comparacion
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    expression                     shift and go to state 111
    comparacion                    shift and go to state 155
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 135

    (59) comparacion -> expression comparador expression DTUBO . comparacion
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    expression                     shift and go to state 111
    comparacion                    shift and go to state 156
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 136

    (33) if -> IF PIZQ comparacion PDER . LIZQ instrucciones LDER
    (34) if -> IF PIZQ comparacion PDER . LIZQ instrucciones LDER elseif
    (35) if -> IF PIZQ comparacion PDER . LIZQ instrucciones LDER else

    LIZQ            shift and go to state 157


state 137

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA . comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> FOR PIZQ declaasig PUNTOYCOMA . comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 158
    expression                     shift and go to state 111
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 138

    (43) for -> FOR PIZQ declaracion IN . VARIABLE PDER LIZQ instrucciones LDER

    VARIABLE        shift and go to state 159


state 139

    (44) while -> WHILE PIZQ comparacion PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 160


state 140

    (45) dowhile -> DO LIZQ instrucciones LDER . WHILE PIZQ comparacion PDER

    WHILE           shift and go to state 161


state 141

    (46) switch -> SWITCH PIZQ VARIABLE PDER . LIZQ cases LDER

    LIZQ            shift and go to state 162


state 142

    (85) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER . LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER . LIZQ LDER

    LIZQ            shift and go to state 163


state 143

    (87) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ . instrucciones LDER
    (88) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ . LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    LDER            shift and go to state 165
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instrucciones                  shift and go to state 164
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 144

    (105) def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER .

    $end            reduce using rule 105 (def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER .)
    LDER            reduce using rule 105 (def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER .)


state 145

    (104) cuerpo_class -> constructor metodos_class .

    LDER            reduce using rule 104 (cuerpo_class -> constructor metodos_class .)


state 146

    (101) metodos_class -> funcion metodos_class .

    LDER            reduce using rule 101 (metodos_class -> funcion metodos_class .)


state 147

    (91) constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ . metodo_cuerpo_class LDER
    (97) metodo_cuerpo_class -> . cuerpo
    (98) metodo_cuerpo_class -> . var_class
    (99) metodo_cuerpo_class -> . metodo_cuerpo_class
    (1) cuerpo -> . instrucciones
    (2) cuerpo -> . funcion
    (3) cuerpo -> . estrcontrol
    (4) cuerpo -> . def_clase
    (5) cuerpo -> . constructor
    (94) var_class -> . THIS PUNTO VARIABLE
    (95) var_class -> . THIS PUNTO VARIABLE IGUAL valor
    (96) var_class -> . THIS PUNTO VARIABLE IGUAL VARIABLE
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (85) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (87) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (88) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER
    (24) estrcontrol -> . if
    (25) estrcontrol -> . for
    (26) estrcontrol -> . while
    (27) estrcontrol -> . dowhile
    (28) estrcontrol -> . switch
    (105) def_clase -> . CLASS VARIABLE LIZQ cuerpo_class LDER
    (106) def_clase -> . CLASS VARIABLE LIZQ LDER
    (91) constructor -> . CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER
    (92) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER
    (93) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ LDER
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (33) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (34) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (35) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (41) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (43) for -> . FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (44) while -> . WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
    (45) dowhile -> . DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
    (46) switch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    THIS            shift and go to state 152
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    FUNCTION        shift and go to state 13
    CLASS           shift and go to state 21
    CONSTRUCTOR     shift and go to state 22
    IF              shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    SWITCH          shift and go to state 33
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    metodo_cuerpo_class            shift and go to state 166
    cuerpo                         shift and go to state 150
    var_class                      shift and go to state 151
    instrucciones                  shift and go to state 2
    funcion                        shift and go to state 3
    estrcontrol                    shift and go to state 4
    def_clase                      shift and go to state 5
    constructor                    shift and go to state 6
    instruccion                    shift and go to state 7
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    dowhile                        shift and go to state 19
    switch                         shift and go to state 20
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 148

    (92) constructor -> CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class . LDER
    (99) metodo_cuerpo_class -> metodo_cuerpo_class .

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 167

  ! LDER            [ reduce using rule 99 (metodo_cuerpo_class -> metodo_cuerpo_class .) ]


state 149

    (93) constructor -> CONSTRUCTOR PIZQ PDER LIZQ LDER .

    $end            reduce using rule 93 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ LDER .)
    FUNCTION        reduce using rule 93 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ LDER .)
    LDER            reduce using rule 93 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ LDER .)


state 150

    (97) metodo_cuerpo_class -> cuerpo .

    LDER            reduce using rule 97 (metodo_cuerpo_class -> cuerpo .)


state 151

    (98) metodo_cuerpo_class -> var_class .

    LDER            reduce using rule 98 (metodo_cuerpo_class -> var_class .)


state 152

    (94) var_class -> THIS . PUNTO VARIABLE
    (95) var_class -> THIS . PUNTO VARIABLE IGUAL valor
    (96) var_class -> THIS . PUNTO VARIABLE IGUAL VARIABLE

    PUNTO           shift and go to state 168


state 153

    (90) argumentos -> VARIABLE COMA argumentos .

    PDER            reduce using rule 90 (argumentos -> VARIABLE COMA argumentos .)


state 154

    (79) term -> VARIABLE RESTA VARIABLE .

    MULTI           reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    DIV             reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    SUMA            reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    RESTA           reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    MAYOR           reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    MENOR           reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    MAYIGUAL        reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    MENIGUAL        reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    DIGUAL          reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    NOIGUAL         reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    PUNTOYCOMA      reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    PDER            reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    LDER            reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    DAMPERSAND      reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)
    DTUBO           reduce using rule 79 (term -> VARIABLE RESTA VARIABLE .)


state 155

    (58) comparacion -> expression comparador expression DAMPERSAND comparacion .

    PUNTOYCOMA      reduce using rule 58 (comparacion -> expression comparador expression DAMPERSAND comparacion .)
    PDER            reduce using rule 58 (comparacion -> expression comparador expression DAMPERSAND comparacion .)


state 156

    (59) comparacion -> expression comparador expression DTUBO comparacion .

    PUNTOYCOMA      reduce using rule 59 (comparacion -> expression comparador expression DTUBO comparacion .)
    PDER            reduce using rule 59 (comparacion -> expression comparador expression DTUBO comparacion .)


state 157

    (33) if -> IF PIZQ comparacion PDER LIZQ . instrucciones LDER
    (34) if -> IF PIZQ comparacion PDER LIZQ . instrucciones LDER elseif
    (35) if -> IF PIZQ comparacion PDER LIZQ . instrucciones LDER else
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 25
    instrucciones                  shift and go to state 169
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 158

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion . PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion . PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER

    PUNTOYCOMA      shift and go to state 170


state 159

    (43) for -> FOR PIZQ declaracion IN VARIABLE . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 171


state 160

    (44) while -> WHILE PIZQ comparacion PDER LIZQ . instrucciones LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 25
    instrucciones                  shift and go to state 172
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 161

    (45) dowhile -> DO LIZQ instrucciones LDER WHILE . PIZQ comparacion PDER

    PIZQ            shift and go to state 173


state 162

    (46) switch -> SWITCH PIZQ VARIABLE PDER LIZQ . cases LDER
    (47) cases -> . CASE VARIABLE DOSPUNTOS instrucciones
    (48) cases -> . CASE VARIABLE DOSPUNTOS instrucciones cases
    (49) cases -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 175
    DEFAULT         shift and go to state 176

    cases                          shift and go to state 174

state 163

    (85) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ . instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ . LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    LDER            shift and go to state 178
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instrucciones                  shift and go to state 177
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 164

    (87) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 179


state 165

    (88) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .

    $end            reduce using rule 88 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .)
    FUNCTION        reduce using rule 88 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .)
    LDER            reduce using rule 88 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .)


state 166

    (91) constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class . LDER
    (99) metodo_cuerpo_class -> metodo_cuerpo_class .

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 180

  ! LDER            [ reduce using rule 99 (metodo_cuerpo_class -> metodo_cuerpo_class .) ]


state 167

    (92) constructor -> CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER .

    $end            reduce using rule 92 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER .)
    FUNCTION        reduce using rule 92 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER .)
    LDER            reduce using rule 92 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ metodo_cuerpo_class LDER .)


state 168

    (94) var_class -> THIS PUNTO . VARIABLE
    (95) var_class -> THIS PUNTO . VARIABLE IGUAL valor
    (96) var_class -> THIS PUNTO . VARIABLE IGUAL VARIABLE

    VARIABLE        shift and go to state 181


state 169

    (33) if -> IF PIZQ comparacion PDER LIZQ instrucciones . LDER
    (34) if -> IF PIZQ comparacion PDER LIZQ instrucciones . LDER elseif
    (35) if -> IF PIZQ comparacion PDER LIZQ instrucciones . LDER else

    LDER            shift and go to state 182


state 170

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA . operadores PDER LIZQ instrucciones LDER
    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA . asignacion PDER LIZQ instrucciones LDER
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 185

    operadores                     shift and go to state 183
    asignacion                     shift and go to state 184

state 171

    (43) for -> FOR PIZQ declaracion IN VARIABLE PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 186


state 172

    (44) while -> WHILE PIZQ comparacion PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 187


state 173

    (45) dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ . comparacion PDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 188
    expression                     shift and go to state 111
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 174

    (46) switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases . LDER

    LDER            shift and go to state 189


state 175

    (47) cases -> CASE . VARIABLE DOSPUNTOS instrucciones
    (48) cases -> CASE . VARIABLE DOSPUNTOS instrucciones cases

    VARIABLE        shift and go to state 190


state 176

    (49) cases -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 191


state 177

    (85) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 192


state 178

    (86) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .

    $end            reduce using rule 86 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .)
    FUNCTION        reduce using rule 86 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .)
    LDER            reduce using rule 86 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .)


state 179

    (87) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .

    $end            reduce using rule 87 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .)
    FUNCTION        reduce using rule 87 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 87 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .)


state 180

    (91) constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER .

    $end            reduce using rule 91 (constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER .)
    FUNCTION        reduce using rule 91 (constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER .)
    LDER            reduce using rule 91 (constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ metodo_cuerpo_class LDER .)


state 181

    (94) var_class -> THIS PUNTO VARIABLE .
    (95) var_class -> THIS PUNTO VARIABLE . IGUAL valor
    (96) var_class -> THIS PUNTO VARIABLE . IGUAL VARIABLE

    LDER            reduce using rule 94 (var_class -> THIS PUNTO VARIABLE .)
    IGUAL           shift and go to state 193


state 182

    (33) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER .
    (34) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER . elseif
    (35) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER . else
    (36) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (37) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (38) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (39) else -> . ELSE LIZQ instrucciones LDER
    (40) else -> . ELSE LIZQ LDER

    $end            reduce using rule 33 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 33 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    ELSE            shift and go to state 196

    elseif                         shift and go to state 194
    else                           shift and go to state 195

state 183

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 197


state 184

    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 198


state 185

    (68) operadores -> VARIABLE . DSUMA
    (69) operadores -> VARIABLE . DRESTA
    (54) asignacion -> VARIABLE . IGUAL expression
    (55) asignacion -> VARIABLE . IGUAL comparacion
    (56) asignacion -> VARIABLE . IGUAL valor

    DSUMA           shift and go to state 51
    DRESTA          shift and go to state 52
    IGUAL           shift and go to state 47


state 186

    (43) for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ . instrucciones LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    declaracion                    shift and go to state 26
    instrucciones                  shift and go to state 199
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 187

    (44) while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER .

    $end            reduce using rule 44 (while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 44 (while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER .)


state 188

    (45) dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion . PDER

    PDER            shift and go to state 200


state 189

    (46) switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .

    $end            reduce using rule 46 (switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    LDER            reduce using rule 46 (switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)


state 190

    (47) cases -> CASE VARIABLE . DOSPUNTOS instrucciones
    (48) cases -> CASE VARIABLE . DOSPUNTOS instrucciones cases

    DOSPUNTOS       shift and go to state 201


state 191

    (49) cases -> DEFAULT DOSPUNTOS . instrucciones
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instrucciones                  shift and go to state 202
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 192

    (85) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .

    $end            reduce using rule 85 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .)
    FUNCTION        reduce using rule 85 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 85 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .)


state 193

    (95) var_class -> THIS PUNTO VARIABLE IGUAL . valor
    (96) var_class -> THIS PUNTO VARIABLE IGUAL . VARIABLE
    (29) valor -> . ENTERO
    (30) valor -> . FLOAT
    (31) valor -> . STRING
    (32) valor -> . BOOL

    VARIABLE        shift and go to state 203
    ENTERO          shift and go to state 205
    FLOAT           shift and go to state 206
    STRING          shift and go to state 207
    BOOL            shift and go to state 94

    valor                          shift and go to state 204

state 194

    (34) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .

    $end            reduce using rule 34 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)
    LDER            reduce using rule 34 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)


state 195

    (35) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else .

    $end            reduce using rule 35 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)
    LDER            reduce using rule 35 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)


state 196

    (36) elseif -> ELSE . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (37) elseif -> ELSE . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (38) elseif -> ELSE . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (39) else -> ELSE . LIZQ instrucciones LDER
    (40) else -> ELSE . LIZQ LDER

    IF              shift and go to state 208
    LIZQ            shift and go to state 209


state 197

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 210


state 198

    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 211


state 199

    (43) for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 212


state 200

    (45) dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER .

    $end            reduce using rule 45 (dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER .)
    LDER            reduce using rule 45 (dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER .)


state 201

    (47) cases -> CASE VARIABLE DOSPUNTOS . instrucciones
    (48) cases -> CASE VARIABLE DOSPUNTOS . instrucciones cases
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instrucciones                  shift and go to state 213
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 202

    (49) cases -> DEFAULT DOSPUNTOS instrucciones .

    LDER            reduce using rule 49 (cases -> DEFAULT DOSPUNTOS instrucciones .)


state 203

    (96) var_class -> THIS PUNTO VARIABLE IGUAL VARIABLE .

    LDER            reduce using rule 96 (var_class -> THIS PUNTO VARIABLE IGUAL VARIABLE .)


state 204

    (95) var_class -> THIS PUNTO VARIABLE IGUAL valor .

    LDER            reduce using rule 95 (var_class -> THIS PUNTO VARIABLE IGUAL valor .)


state 205

    (29) valor -> ENTERO .

    LDER            reduce using rule 29 (valor -> ENTERO .)


state 206

    (30) valor -> FLOAT .

    LDER            reduce using rule 30 (valor -> FLOAT .)


state 207

    (31) valor -> STRING .

    LDER            reduce using rule 31 (valor -> STRING .)


state 208

    (36) elseif -> ELSE IF . PIZQ comparacion PDER LIZQ instrucciones LDER
    (37) elseif -> ELSE IF . PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (38) elseif -> ELSE IF . PIZQ comparacion PDER LIZQ instrucciones LDER else

    PIZQ            shift and go to state 214


state 209

    (39) else -> ELSE LIZQ . instrucciones LDER
    (40) else -> ELSE LIZQ . LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    LDER            shift and go to state 216
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    instrucciones                  shift and go to state 215
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    comparacion                    shift and go to state 25
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 210

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ . instrucciones LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    declaasig                      shift and go to state 27
    comparacion                    shift and go to state 25
    operadores                     shift and go to state 28
    instrucciones                  shift and go to state 217
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    declaracion                    shift and go to state 26
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 211

    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ . instrucciones LDER
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    declaasig                      shift and go to state 27
    comparacion                    shift and go to state 25
    asignacion                     shift and go to state 23
    instrucciones                  shift and go to state 218
    instruccion                    shift and go to state 7
    expression                     shift and go to state 24
    declaracion                    shift and go to state 26
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 212

    (43) for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER .

    $end            reduce using rule 43 (for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 43 (for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER .)


state 213

    (47) cases -> CASE VARIABLE DOSPUNTOS instrucciones .
    (48) cases -> CASE VARIABLE DOSPUNTOS instrucciones . cases
    (47) cases -> . CASE VARIABLE DOSPUNTOS instrucciones
    (48) cases -> . CASE VARIABLE DOSPUNTOS instrucciones cases
    (49) cases -> . DEFAULT DOSPUNTOS instrucciones

    LDER            reduce using rule 47 (cases -> CASE VARIABLE DOSPUNTOS instrucciones .)
    CASE            shift and go to state 175
    DEFAULT         shift and go to state 176

    cases                          shift and go to state 219

state 214

    (36) elseif -> ELSE IF PIZQ . comparacion PDER LIZQ instrucciones LDER
    (37) elseif -> ELSE IF PIZQ . comparacion PDER LIZQ instrucciones LDER elseif
    (38) elseif -> ELSE IF PIZQ . comparacion PDER LIZQ instrucciones LDER else
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    STRING          shift and go to state 35
    VARIABLE        shift and go to state 112
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 220
    expression                     shift and go to state 111
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 215

    (39) else -> ELSE LIZQ instrucciones . LDER

    LDER            shift and go to state 221


state 216

    (40) else -> ELSE LIZQ LDER .

    $end            reduce using rule 40 (else -> ELSE LIZQ LDER .)
    LDER            reduce using rule 40 (else -> ELSE LIZQ LDER .)


state 217

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 222


state 218

    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 223


state 219

    (48) cases -> CASE VARIABLE DOSPUNTOS instrucciones cases .

    LDER            reduce using rule 48 (cases -> CASE VARIABLE DOSPUNTOS instrucciones cases .)


state 220

    (36) elseif -> ELSE IF PIZQ comparacion . PDER LIZQ instrucciones LDER
    (37) elseif -> ELSE IF PIZQ comparacion . PDER LIZQ instrucciones LDER elseif
    (38) elseif -> ELSE IF PIZQ comparacion . PDER LIZQ instrucciones LDER else

    PDER            shift and go to state 224


state 221

    (39) else -> ELSE LIZQ instrucciones LDER .

    $end            reduce using rule 39 (else -> ELSE LIZQ instrucciones LDER .)
    LDER            reduce using rule 39 (else -> ELSE LIZQ instrucciones LDER .)


state 222

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER .

    $end            reduce using rule 41 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 41 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER .)


state 223

    (42) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER .

    $end            reduce using rule 42 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 42 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER .)


state 224

    (36) elseif -> ELSE IF PIZQ comparacion PDER . LIZQ instrucciones LDER
    (37) elseif -> ELSE IF PIZQ comparacion PDER . LIZQ instrucciones LDER elseif
    (38) elseif -> ELSE IF PIZQ comparacion PDER . LIZQ instrucciones LDER else

    LIZQ            shift and go to state 225


state 225

    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ . instrucciones LDER
    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ . instrucciones LDER elseif
    (38) elseif -> ELSE IF PIZQ comparacion PDER LIZQ . instrucciones LDER else
    (6) instrucciones -> . instruccion PUNTOYCOMA
    (7) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (8) instrucciones -> . BREAK PUNTOYCOMA
    (9) instrucciones -> . CONTINUE PUNTOYCOMA
    (10) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (11) instrucciones -> . TYPEOF VARIABLE
    (12) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (13) instruccion -> . asignacion
    (14) instruccion -> . expression
    (15) instruccion -> . comparacion
    (16) instruccion -> . declaracion
    (17) instruccion -> . declaasig
    (18) instruccion -> . operadores
    (54) asignacion -> . VARIABLE IGUAL expression
    (55) asignacion -> . VARIABLE IGUAL comparacion
    (56) asignacion -> . VARIABLE IGUAL valor
    (70) expression -> . expression SUMA term
    (71) expression -> . VARIABLE SUMA VARIABLE
    (72) expression -> . expression RESTA term
    (73) expression -> . VARIABLE RESTA VARIABLE
    (74) expression -> . term
    (75) expression -> . VARIABLE
    (83) expression -> . PIZQ expression PDER
    (84) expression -> . LIZQ expression LDER
    (57) comparacion -> . expression comparador expression
    (58) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (59) comparacion -> . expression comparador expression DTUBO comparacion
    (60) comparacion -> . STRING DIGUAL STRING
    (61) comparacion -> . VARIABLE comparador ENTERO
    (19) declaracion -> . VAR VARIABLE
    (20) declaracion -> . LET VARIABLE
    (21) declaasig -> . VAR asignacion
    (22) declaasig -> . LET asignacion
    (23) declaasig -> . CONST asignacion
    (68) operadores -> . VARIABLE DSUMA
    (69) operadores -> . VARIABLE DRESTA
    (76) term -> . term MULTI factor
    (77) term -> . VARIABLE MULTI VARIABLE
    (78) term -> . term DIV factor
    (79) term -> . VARIABLE RESTA VARIABLE
    (80) term -> . factor
    (81) factor -> . ENTERO
    (82) factor -> . FLOAT

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    TYPEOF          shift and go to state 12
    VARIABLE        shift and go to state 11
    PIZQ            shift and go to state 14
    LIZQ            shift and go to state 15
    STRING          shift and go to state 35
    VAR             shift and go to state 37
    LET             shift and go to state 38
    CONST           shift and go to state 39
    ENTERO          shift and go to state 36
    FLOAT           shift and go to state 41

    comparacion                    shift and go to state 25
    instrucciones                  shift and go to state 226
    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 23
    expression                     shift and go to state 24
    declaracion                    shift and go to state 26
    declaasig                      shift and go to state 27
    operadores                     shift and go to state 28
    term                           shift and go to state 34
    factor                         shift and go to state 40

state 226

    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones . LDER
    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones . LDER elseif
    (38) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones . LDER else

    LDER            shift and go to state 227


state 227

    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER .
    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER . elseif
    (38) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER . else
    (36) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (37) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (38) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (39) else -> . ELSE LIZQ instrucciones LDER
    (40) else -> . ELSE LIZQ LDER

    $end            reduce using rule 36 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 36 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    ELSE            shift and go to state 196

    elseif                         shift and go to state 228
    else                           shift and go to state 229

state 228

    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .

    $end            reduce using rule 37 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)
    LDER            reduce using rule 37 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)


state 229

    (38) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else .

    $end            reduce using rule 38 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)
    LDER            reduce using rule 38 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 11 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 11 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 11 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 11 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 63 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 63 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 87 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 87 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 87 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 87 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 112 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for LDER in state 148 resolved as shift
WARNING: shift/reduce conflict for LDER in state 166 resolved as shift
WARNING: reduce/reduce conflict in state 92 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (factor -> ENTERO) in state 92
WARNING: reduce/reduce conflict in state 93 resolved using rule (valor -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 93
WARNING: reduce/reduce conflict in state 96 resolved using rule (expression -> VARIABLE RESTA VARIABLE)
WARNING: rejected rule (term -> VARIABLE RESTA VARIABLE) in state 96
