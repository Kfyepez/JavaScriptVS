Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CDER
    CIZQ
    DELETE
    ISNEGADO
    MOD
    NEW

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> instrucciones
Rule 2     cuerpo -> funcion
Rule 3     cuerpo -> estrcontrol
Rule 4     cuerpo -> def_clase
Rule 5     instrucciones -> instruccion PUNTOYCOMA
Rule 6     instrucciones -> instruccion PUNTOYCOMA instrucciones
Rule 7     instrucciones -> BREAK PUNTOYCOMA
Rule 8     instrucciones -> CONTINUE PUNTOYCOMA
Rule 9     instrucciones -> RETURN VARIABLE PUNTOYCOMA
Rule 10    instrucciones -> TYPEOF VARIABLE
Rule 11    instrucciones -> VARIABLE INSTANCEOF VARIABLE
Rule 12    instruccion -> asignacion
Rule 13    instruccion -> expression
Rule 14    instruccion -> comparacion
Rule 15    instruccion -> declaracion
Rule 16    instruccion -> declaasig
Rule 17    instruccion -> operadores
Rule 18    declaracion -> VAR VARIABLE
Rule 19    declaracion -> LET VARIABLE
Rule 20    declaasig -> VAR asignacion
Rule 21    declaasig -> LET asignacion
Rule 22    declaasig -> CONST asignacion
Rule 23    estrcontrol -> if
Rule 24    estrcontrol -> for
Rule 25    estrcontrol -> while
Rule 26    estrcontrol -> dowhile
Rule 27    estrcontrol -> switch
Rule 28    valor -> ENTERO
Rule 29    valor -> FLOAT
Rule 30    valor -> STRING
Rule 31    valor -> BOOL
Rule 32    if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER
Rule 33    if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
Rule 34    if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else
Rule 35    elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER
Rule 36    elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
Rule 37    elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else
Rule 38    else -> ELSE LIZQ instrucciones LDER
Rule 39    else -> ELSE LIZQ LDER
Rule 40    for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
Rule 41    for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
Rule 42    for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
Rule 43    while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
Rule 44    dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
Rule 45    switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
Rule 46    cases -> CASE VARIABLE DOSPUNTOS instrucciones
Rule 47    cases -> CASE VARIABLE DOSPUNTOS instrucciones cases
Rule 48    cases -> DEFAULT DOSPUNTOS instrucciones
Rule 49    throw -> THROW VARIABLE PUNTOYCOMA
Rule 50    trycatch -> TRY LIZQ instrucciones LDER CATCH PIZQ VARIABLE PDER LIZQ instrucciones LDER
Rule 51    trycatch -> TRY LIZQ instrucciones LDER FINALLY LIZQ instrucciones LDER
Rule 52    trycatch -> TRY LIZQ instrucciones LDER CATCH PIZQ VARIABLE PDER LIZQ instrucciones LDER FINALLY LIZQ instrucciones LDER
Rule 53    asignacion -> VARIABLE IGUAL expression
Rule 54    asignacion -> VARIABLE IGUAL comparacion
Rule 55    asignacion -> VARIABLE IGUAL valor
Rule 56    comparacion -> expression comparador expression
Rule 57    comparacion -> expression comparador expression DAMPERSAND comparacion
Rule 58    comparacion -> expression comparador expression DTUBO comparacion
Rule 59    comparacion -> STRING DIGUAL STRING
Rule 60    comparador -> MAYOR
Rule 61    comparador -> MENOR
Rule 62    comparador -> MAYIGUAL
Rule 63    comparador -> MENIGUAL
Rule 64    comparador -> DIGUAL
Rule 65    comparador -> NOIGUAL
Rule 66    operadores -> VARIABLE DSUMA
Rule 67    operadores -> VARIABLE DRESTA
Rule 68    expression -> expression SUMA term
Rule 69    expression -> VARIABLE SUMA VARIABLE
Rule 70    expression -> expression RESTA term
Rule 71    expression -> VARIABLE RESTA VARIABLE
Rule 72    expression -> term
Rule 73    expression -> VARIABLE
Rule 74    term -> term MULTI factor
Rule 75    term -> VARIABLE MULTI VARIABLE
Rule 76    term -> term DIV factor
Rule 77    term -> VARIABLE RESTA VARIABLE
Rule 78    term -> factor
Rule 79    factor -> ENTERO
Rule 80    factor -> FLOAT
Rule 81    expression -> PIZQ expression PDER
Rule 82    expression -> LIZQ expression LDER
Rule 83    funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
Rule 84    funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
Rule 85    funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
Rule 86    funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER
Rule 87    argumentos -> VARIABLE
Rule 88    argumentos -> VARIABLE COMA argumentos
Rule 89    constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class LDER
Rule 90    constructor -> CONSTRUCTOR PIZQ PDER LIZQ p_metodo_cuerpo_class LDER
Rule 91    var_class -> THIS PUNTO VARIABLE
Rule 92    var_class -> THIS PUNTO VARIABLE IGUAL valor
Rule 93    var_class -> THIS PUNTO VARIABLE IGUAL VARIABLE
Rule 94    p_metodo_cuerpo_class -> cuerpo
Rule 95    p_metodo_cuerpo_class -> var_class
Rule 96    p_metodo_cuerpo_class -> p_metodo_cuerpo_class
Rule 97    metodos_class -> funcion
Rule 98    metodos_class -> funcion metodos_class
Rule 99    cuerpo_class -> metodos_class
Rule 100   cuerpo_class -> constructor
Rule 101   cuerpo_class -> constructor metodos_class
Rule 102   def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER
Rule 103   def_clase -> CLASS VARIABLE LIZQ LDER

Terminals, with rules where they appear

BOOL                 : 31
BREAK                : 7
CASE                 : 46 47
CATCH                : 50 52
CDER                 : 
CIZQ                 : 
CLASS                : 102 103
COMA                 : 88
CONST                : 22
CONSTRUCTOR          : 89 90
CONTINUE             : 8
DAMPERSAND           : 57
DEFAULT              : 48
DELETE               : 
DIGUAL               : 59 64
DIV                  : 76
DO                   : 44
DOSPUNTOS            : 46 47 48
DRESTA               : 67
DSUMA                : 66
DTUBO                : 58
ELSE                 : 35 36 37 38 39
ENTERO               : 28 79
FINALLY              : 51 52
FLOAT                : 29 80
FOR                  : 40 41 42
FUNCTION             : 83 84 85 86
IF                   : 32 33 34 35 36 37
IGUAL                : 53 54 55 92 93
IN                   : 42
INSTANCEOF           : 11
ISNEGADO             : 
LDER                 : 32 33 34 35 36 37 38 39 40 41 42 43 44 45 50 50 51 51 52 52 52 82 83 84 85 86 89 90 102 103
LET                  : 19 21
LIZQ                 : 32 33 34 35 36 37 38 39 40 41 42 43 44 45 50 50 51 51 52 52 52 82 83 84 85 86 89 90 102 103
MAYIGUAL             : 62
MAYOR                : 60
MENIGUAL             : 63
MENOR                : 61
MOD                  : 
MULTI                : 74 75
NEW                  : 
NOIGUAL              : 65
PDER                 : 32 33 34 35 36 37 40 41 42 43 44 45 50 52 81 83 84 85 86 89 90
PIZQ                 : 32 33 34 35 36 37 40 41 42 43 44 45 50 52 81 83 84 85 86 89 90
PUNTO                : 91 92 93
PUNTOYCOMA           : 5 6 7 8 9 40 40 41 41 49
RESTA                : 70 71 77
RETURN               : 9
STRING               : 30 59 59
SUMA                 : 68 69
SWITCH               : 45
THIS                 : 91 92 93
THROW                : 49
TRY                  : 50 51 52
TYPEOF               : 10
VAR                  : 18 20
VARIABLE             : 9 10 11 11 18 19 42 45 46 47 49 50 52 53 54 55 66 67 69 69 71 71 73 75 75 77 77 83 84 85 86 87 88 91 92 93 93 102 103
WHILE                : 43 44
error                : 

Nonterminals, with rules where they appear

argumentos           : 83 84 88 89
asignacion           : 12 20 21 22 41
cases                : 45 47
comparacion          : 14 32 33 34 35 36 37 40 41 43 44 54 57 58
comparador           : 56 57 58
constructor          : 100 101
cuerpo               : 94 0
cuerpo_class         : 102
declaasig            : 16 40 41
declaracion          : 15 42
def_clase            : 4
dowhile              : 26
else                 : 34 37
elseif               : 33 36
estrcontrol          : 3
expression           : 13 53 56 56 57 57 58 58 68 70 81 82
factor               : 74 76 78
for                  : 24
funcion              : 2 97 98
if                   : 23
instruccion          : 5 6
instrucciones        : 1 6 32 33 34 35 36 37 38 40 41 42 43 44 46 47 48 50 50 51 51 52 52 52 83 85
metodos_class        : 98 99 101
operadores           : 17 40
p_metodo_cuerpo_class : 89 90 96
switch               : 27
term                 : 68 70 72 74 76
throw                : 
trycatch             : 
valor                : 55 92
var_class            : 95
while                : 25

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . instrucciones
    (2) cuerpo -> . funcion
    (3) cuerpo -> . estrcontrol
    (4) cuerpo -> . def_clase
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (83) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER
    (23) estrcontrol -> . if
    (24) estrcontrol -> . for
    (25) estrcontrol -> . while
    (26) estrcontrol -> . dowhile
    (27) estrcontrol -> . switch
    (102) def_clase -> . CLASS VARIABLE LIZQ cuerpo_class LDER
    (103) def_clase -> . CLASS VARIABLE LIZQ LDER
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (32) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (33) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (34) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (40) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (42) for -> . FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (43) while -> . WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
    (44) dowhile -> . DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
    (45) switch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    FUNCTION        shift and go to state 12
    CLASS           shift and go to state 20
    IF              shift and go to state 27
    FOR             shift and go to state 28
    WHILE           shift and go to state 29
    DO              shift and go to state 30
    SWITCH          shift and go to state 31
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    cuerpo                         shift and go to state 1
    instrucciones                  shift and go to state 2
    funcion                        shift and go to state 3
    estrcontrol                    shift and go to state 4
    def_clase                      shift and go to state 5
    instruccion                    shift and go to state 6
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    dowhile                        shift and go to state 18
    switch                         shift and go to state 19
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> instrucciones .

    $end            reduce using rule 1 (cuerpo -> instrucciones .)
    LDER            reduce using rule 1 (cuerpo -> instrucciones .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)
    LDER            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (3) cuerpo -> estrcontrol .

    $end            reduce using rule 3 (cuerpo -> estrcontrol .)
    LDER            reduce using rule 3 (cuerpo -> estrcontrol .)


state 5

    (4) cuerpo -> def_clase .

    $end            reduce using rule 4 (cuerpo -> def_clase .)
    LDER            reduce using rule 4 (cuerpo -> def_clase .)


state 6

    (5) instrucciones -> instruccion . PUNTOYCOMA
    (6) instrucciones -> instruccion . PUNTOYCOMA instrucciones

    PUNTOYCOMA      shift and go to state 40


state 7

    (7) instrucciones -> BREAK . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 41


state 8

    (8) instrucciones -> CONTINUE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 42


state 9

    (9) instrucciones -> RETURN . VARIABLE PUNTOYCOMA

    VARIABLE        shift and go to state 43


state 10

    (11) instrucciones -> VARIABLE . INSTANCEOF VARIABLE
    (53) asignacion -> VARIABLE . IGUAL expression
    (54) asignacion -> VARIABLE . IGUAL comparacion
    (55) asignacion -> VARIABLE . IGUAL valor
    (69) expression -> VARIABLE . SUMA VARIABLE
    (71) expression -> VARIABLE . RESTA VARIABLE
    (73) expression -> VARIABLE .
    (66) operadores -> VARIABLE . DSUMA
    (67) operadores -> VARIABLE . DRESTA
    (75) term -> VARIABLE . MULTI VARIABLE
    (77) term -> VARIABLE . RESTA VARIABLE

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    INSTANCEOF      shift and go to state 44
    IGUAL           shift and go to state 45
    SUMA            shift and go to state 46
    RESTA           shift and go to state 47
    MAYOR           reduce using rule 73 (expression -> VARIABLE .)
    MENOR           reduce using rule 73 (expression -> VARIABLE .)
    MAYIGUAL        reduce using rule 73 (expression -> VARIABLE .)
    MENIGUAL        reduce using rule 73 (expression -> VARIABLE .)
    DIGUAL          reduce using rule 73 (expression -> VARIABLE .)
    NOIGUAL         reduce using rule 73 (expression -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 73 (expression -> VARIABLE .)
    DSUMA           shift and go to state 48
    DRESTA          shift and go to state 49
    MULTI           shift and go to state 50

  ! SUMA            [ reduce using rule 73 (expression -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 73 (expression -> VARIABLE .) ]


state 11

    (10) instrucciones -> TYPEOF . VARIABLE

    VARIABLE        shift and go to state 51


state 12

    (83) funcion -> FUNCTION . VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> FUNCTION . VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> FUNCTION . VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION . VARIABLE PIZQ PDER LIZQ LDER

    VARIABLE        shift and go to state 52


state 13

    (81) expression -> PIZQ . expression PDER
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    expression                     shift and go to state 53
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 14

    (82) expression -> LIZQ . expression LDER
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    expression                     shift and go to state 55
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 15

    (23) estrcontrol -> if .

    $end            reduce using rule 23 (estrcontrol -> if .)
    LDER            reduce using rule 23 (estrcontrol -> if .)


state 16

    (24) estrcontrol -> for .

    $end            reduce using rule 24 (estrcontrol -> for .)
    LDER            reduce using rule 24 (estrcontrol -> for .)


state 17

    (25) estrcontrol -> while .

    $end            reduce using rule 25 (estrcontrol -> while .)
    LDER            reduce using rule 25 (estrcontrol -> while .)


state 18

    (26) estrcontrol -> dowhile .

    $end            reduce using rule 26 (estrcontrol -> dowhile .)
    LDER            reduce using rule 26 (estrcontrol -> dowhile .)


state 19

    (27) estrcontrol -> switch .

    $end            reduce using rule 27 (estrcontrol -> switch .)
    LDER            reduce using rule 27 (estrcontrol -> switch .)


state 20

    (102) def_clase -> CLASS . VARIABLE LIZQ cuerpo_class LDER
    (103) def_clase -> CLASS . VARIABLE LIZQ LDER

    VARIABLE        shift and go to state 56


state 21

    (12) instruccion -> asignacion .

    PUNTOYCOMA      reduce using rule 12 (instruccion -> asignacion .)


state 22

    (13) instruccion -> expression .
    (68) expression -> expression . SUMA term
    (70) expression -> expression . RESTA term
    (56) comparacion -> expression . comparador expression
    (57) comparacion -> expression . comparador expression DAMPERSAND comparacion
    (58) comparacion -> expression . comparador expression DTUBO comparacion
    (60) comparador -> . MAYOR
    (61) comparador -> . MENOR
    (62) comparador -> . MAYIGUAL
    (63) comparador -> . MENIGUAL
    (64) comparador -> . DIGUAL
    (65) comparador -> . NOIGUAL

    PUNTOYCOMA      reduce using rule 13 (instruccion -> expression .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MAYOR           shift and go to state 60
    MENOR           shift and go to state 61
    MAYIGUAL        shift and go to state 62
    MENIGUAL        shift and go to state 63
    DIGUAL          shift and go to state 64
    NOIGUAL         shift and go to state 65

    comparador                     shift and go to state 59

state 23

    (14) instruccion -> comparacion .

    PUNTOYCOMA      reduce using rule 14 (instruccion -> comparacion .)


state 24

    (15) instruccion -> declaracion .

    PUNTOYCOMA      reduce using rule 15 (instruccion -> declaracion .)


state 25

    (16) instruccion -> declaasig .

    PUNTOYCOMA      reduce using rule 16 (instruccion -> declaasig .)


state 26

    (17) instruccion -> operadores .

    PUNTOYCOMA      reduce using rule 17 (instruccion -> operadores .)


state 27

    (32) if -> IF . PIZQ comparacion PDER LIZQ instrucciones LDER
    (33) if -> IF . PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (34) if -> IF . PIZQ comparacion PDER LIZQ instrucciones LDER else

    PIZQ            shift and go to state 66


state 28

    (40) for -> FOR . PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> FOR . PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (42) for -> FOR . PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER

    PIZQ            shift and go to state 67


state 29

    (43) while -> WHILE . PIZQ comparacion PDER LIZQ instrucciones LDER

    PIZQ            shift and go to state 68


state 30

    (44) dowhile -> DO . LIZQ instrucciones LDER WHILE PIZQ comparacion PDER

    LIZQ            shift and go to state 69


state 31

    (45) switch -> SWITCH . PIZQ VARIABLE PDER LIZQ cases LDER

    PIZQ            shift and go to state 70


state 32

    (72) expression -> term .
    (74) term -> term . MULTI factor
    (76) term -> term . DIV factor

    SUMA            reduce using rule 72 (expression -> term .)
    RESTA           reduce using rule 72 (expression -> term .)
    MAYOR           reduce using rule 72 (expression -> term .)
    MENOR           reduce using rule 72 (expression -> term .)
    MAYIGUAL        reduce using rule 72 (expression -> term .)
    MENIGUAL        reduce using rule 72 (expression -> term .)
    DIGUAL          reduce using rule 72 (expression -> term .)
    NOIGUAL         reduce using rule 72 (expression -> term .)
    PUNTOYCOMA      reduce using rule 72 (expression -> term .)
    PDER            reduce using rule 72 (expression -> term .)
    LDER            reduce using rule 72 (expression -> term .)
    DAMPERSAND      reduce using rule 72 (expression -> term .)
    DTUBO           reduce using rule 72 (expression -> term .)
    MULTI           shift and go to state 71
    DIV             shift and go to state 72


state 33

    (59) comparacion -> STRING . DIGUAL STRING

    DIGUAL          shift and go to state 73


state 34

    (18) declaracion -> VAR . VARIABLE
    (20) declaasig -> VAR . asignacion
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 74

    asignacion                     shift and go to state 75

state 35

    (19) declaracion -> LET . VARIABLE
    (21) declaasig -> LET . asignacion
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 76

    asignacion                     shift and go to state 77

state 36

    (22) declaasig -> CONST . asignacion
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 79

    asignacion                     shift and go to state 78

state 37

    (78) term -> factor .

    MULTI           reduce using rule 78 (term -> factor .)
    DIV             reduce using rule 78 (term -> factor .)
    SUMA            reduce using rule 78 (term -> factor .)
    RESTA           reduce using rule 78 (term -> factor .)
    MAYOR           reduce using rule 78 (term -> factor .)
    MENOR           reduce using rule 78 (term -> factor .)
    MAYIGUAL        reduce using rule 78 (term -> factor .)
    MENIGUAL        reduce using rule 78 (term -> factor .)
    DIGUAL          reduce using rule 78 (term -> factor .)
    NOIGUAL         reduce using rule 78 (term -> factor .)
    PUNTOYCOMA      reduce using rule 78 (term -> factor .)
    PDER            reduce using rule 78 (term -> factor .)
    LDER            reduce using rule 78 (term -> factor .)
    DAMPERSAND      reduce using rule 78 (term -> factor .)
    DTUBO           reduce using rule 78 (term -> factor .)


state 38

    (79) factor -> ENTERO .

    MULTI           reduce using rule 79 (factor -> ENTERO .)
    DIV             reduce using rule 79 (factor -> ENTERO .)
    SUMA            reduce using rule 79 (factor -> ENTERO .)
    RESTA           reduce using rule 79 (factor -> ENTERO .)
    MAYOR           reduce using rule 79 (factor -> ENTERO .)
    MENOR           reduce using rule 79 (factor -> ENTERO .)
    MAYIGUAL        reduce using rule 79 (factor -> ENTERO .)
    MENIGUAL        reduce using rule 79 (factor -> ENTERO .)
    DIGUAL          reduce using rule 79 (factor -> ENTERO .)
    NOIGUAL         reduce using rule 79 (factor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 79 (factor -> ENTERO .)
    PDER            reduce using rule 79 (factor -> ENTERO .)
    LDER            reduce using rule 79 (factor -> ENTERO .)
    DAMPERSAND      reduce using rule 79 (factor -> ENTERO .)
    DTUBO           reduce using rule 79 (factor -> ENTERO .)


state 39

    (80) factor -> FLOAT .

    MULTI           reduce using rule 80 (factor -> FLOAT .)
    DIV             reduce using rule 80 (factor -> FLOAT .)
    SUMA            reduce using rule 80 (factor -> FLOAT .)
    RESTA           reduce using rule 80 (factor -> FLOAT .)
    MAYOR           reduce using rule 80 (factor -> FLOAT .)
    MENOR           reduce using rule 80 (factor -> FLOAT .)
    MAYIGUAL        reduce using rule 80 (factor -> FLOAT .)
    MENIGUAL        reduce using rule 80 (factor -> FLOAT .)
    DIGUAL          reduce using rule 80 (factor -> FLOAT .)
    NOIGUAL         reduce using rule 80 (factor -> FLOAT .)
    PUNTOYCOMA      reduce using rule 80 (factor -> FLOAT .)
    PDER            reduce using rule 80 (factor -> FLOAT .)
    LDER            reduce using rule 80 (factor -> FLOAT .)
    DAMPERSAND      reduce using rule 80 (factor -> FLOAT .)
    DTUBO           reduce using rule 80 (factor -> FLOAT .)


state 40

    (5) instrucciones -> instruccion PUNTOYCOMA .
    (6) instrucciones -> instruccion PUNTOYCOMA . instrucciones
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    $end            reduce using rule 5 (instrucciones -> instruccion PUNTOYCOMA .)
    LDER            reduce using rule 5 (instrucciones -> instruccion PUNTOYCOMA .)
    CASE            reduce using rule 5 (instrucciones -> instruccion PUNTOYCOMA .)
    DEFAULT         reduce using rule 5 (instrucciones -> instruccion PUNTOYCOMA .)
    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instruccion                    shift and go to state 6
    instrucciones                  shift and go to state 80
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 41

    (7) instrucciones -> BREAK PUNTOYCOMA .

    $end            reduce using rule 7 (instrucciones -> BREAK PUNTOYCOMA .)
    LDER            reduce using rule 7 (instrucciones -> BREAK PUNTOYCOMA .)
    CASE            reduce using rule 7 (instrucciones -> BREAK PUNTOYCOMA .)
    DEFAULT         reduce using rule 7 (instrucciones -> BREAK PUNTOYCOMA .)


state 42

    (8) instrucciones -> CONTINUE PUNTOYCOMA .

    $end            reduce using rule 8 (instrucciones -> CONTINUE PUNTOYCOMA .)
    LDER            reduce using rule 8 (instrucciones -> CONTINUE PUNTOYCOMA .)
    CASE            reduce using rule 8 (instrucciones -> CONTINUE PUNTOYCOMA .)
    DEFAULT         reduce using rule 8 (instrucciones -> CONTINUE PUNTOYCOMA .)


state 43

    (9) instrucciones -> RETURN VARIABLE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 81


state 44

    (11) instrucciones -> VARIABLE INSTANCEOF . VARIABLE

    VARIABLE        shift and go to state 82


state 45

    (53) asignacion -> VARIABLE IGUAL . expression
    (54) asignacion -> VARIABLE IGUAL . comparacion
    (55) asignacion -> VARIABLE IGUAL . valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (28) valor -> . ENTERO
    (29) valor -> . FLOAT
    (30) valor -> . STRING
    (31) valor -> . BOOL
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 86
    ENTERO          shift and go to state 87
    FLOAT           shift and go to state 88
    BOOL            shift and go to state 89

    expression                     shift and go to state 83
    comparacion                    shift and go to state 84
    valor                          shift and go to state 85
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 46

    (69) expression -> VARIABLE SUMA . VARIABLE

    VARIABLE        shift and go to state 90


state 47

    (71) expression -> VARIABLE RESTA . VARIABLE
    (77) term -> VARIABLE RESTA . VARIABLE

    VARIABLE        shift and go to state 91


state 48

    (66) operadores -> VARIABLE DSUMA .

    PUNTOYCOMA      reduce using rule 66 (operadores -> VARIABLE DSUMA .)
    PDER            reduce using rule 66 (operadores -> VARIABLE DSUMA .)


state 49

    (67) operadores -> VARIABLE DRESTA .

    PUNTOYCOMA      reduce using rule 67 (operadores -> VARIABLE DRESTA .)
    PDER            reduce using rule 67 (operadores -> VARIABLE DRESTA .)


state 50

    (75) term -> VARIABLE MULTI . VARIABLE

    VARIABLE        shift and go to state 92


state 51

    (10) instrucciones -> TYPEOF VARIABLE .

    $end            reduce using rule 10 (instrucciones -> TYPEOF VARIABLE .)
    LDER            reduce using rule 10 (instrucciones -> TYPEOF VARIABLE .)
    CASE            reduce using rule 10 (instrucciones -> TYPEOF VARIABLE .)
    DEFAULT         reduce using rule 10 (instrucciones -> TYPEOF VARIABLE .)


state 52

    (83) funcion -> FUNCTION VARIABLE . PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> FUNCTION VARIABLE . PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> FUNCTION VARIABLE . PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE . PIZQ PDER LIZQ LDER

    PIZQ            shift and go to state 93


state 53

    (81) expression -> PIZQ expression . PDER
    (68) expression -> expression . SUMA term
    (70) expression -> expression . RESTA term

    PDER            shift and go to state 94
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58


state 54

    (69) expression -> VARIABLE . SUMA VARIABLE
    (71) expression -> VARIABLE . RESTA VARIABLE
    (73) expression -> VARIABLE .
    (75) term -> VARIABLE . MULTI VARIABLE
    (77) term -> VARIABLE . RESTA VARIABLE

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    SUMA            shift and go to state 46
    RESTA           shift and go to state 47
    PDER            reduce using rule 73 (expression -> VARIABLE .)
    LDER            reduce using rule 73 (expression -> VARIABLE .)
    MAYOR           reduce using rule 73 (expression -> VARIABLE .)
    MENOR           reduce using rule 73 (expression -> VARIABLE .)
    MAYIGUAL        reduce using rule 73 (expression -> VARIABLE .)
    MENIGUAL        reduce using rule 73 (expression -> VARIABLE .)
    DIGUAL          reduce using rule 73 (expression -> VARIABLE .)
    NOIGUAL         reduce using rule 73 (expression -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 73 (expression -> VARIABLE .)
    DAMPERSAND      reduce using rule 73 (expression -> VARIABLE .)
    DTUBO           reduce using rule 73 (expression -> VARIABLE .)
    MULTI           shift and go to state 50

  ! SUMA            [ reduce using rule 73 (expression -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 73 (expression -> VARIABLE .) ]


state 55

    (82) expression -> LIZQ expression . LDER
    (68) expression -> expression . SUMA term
    (70) expression -> expression . RESTA term

    LDER            shift and go to state 95
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58


state 56

    (102) def_clase -> CLASS VARIABLE . LIZQ cuerpo_class LDER
    (103) def_clase -> CLASS VARIABLE . LIZQ LDER

    LIZQ            shift and go to state 96


state 57

    (68) expression -> expression SUMA . term
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    VARIABLE        shift and go to state 98
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    term                           shift and go to state 97
    factor                         shift and go to state 37

state 58

    (70) expression -> expression RESTA . term
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    VARIABLE        shift and go to state 98
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    term                           shift and go to state 99
    factor                         shift and go to state 37

state 59

    (56) comparacion -> expression comparador . expression
    (57) comparacion -> expression comparador . expression DAMPERSAND comparacion
    (58) comparacion -> expression comparador . expression DTUBO comparacion
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    expression                     shift and go to state 100
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 60

    (60) comparador -> MAYOR .

    VARIABLE        reduce using rule 60 (comparador -> MAYOR .)
    PIZQ            reduce using rule 60 (comparador -> MAYOR .)
    LIZQ            reduce using rule 60 (comparador -> MAYOR .)
    ENTERO          reduce using rule 60 (comparador -> MAYOR .)
    FLOAT           reduce using rule 60 (comparador -> MAYOR .)


state 61

    (61) comparador -> MENOR .

    VARIABLE        reduce using rule 61 (comparador -> MENOR .)
    PIZQ            reduce using rule 61 (comparador -> MENOR .)
    LIZQ            reduce using rule 61 (comparador -> MENOR .)
    ENTERO          reduce using rule 61 (comparador -> MENOR .)
    FLOAT           reduce using rule 61 (comparador -> MENOR .)


state 62

    (62) comparador -> MAYIGUAL .

    VARIABLE        reduce using rule 62 (comparador -> MAYIGUAL .)
    PIZQ            reduce using rule 62 (comparador -> MAYIGUAL .)
    LIZQ            reduce using rule 62 (comparador -> MAYIGUAL .)
    ENTERO          reduce using rule 62 (comparador -> MAYIGUAL .)
    FLOAT           reduce using rule 62 (comparador -> MAYIGUAL .)


state 63

    (63) comparador -> MENIGUAL .

    VARIABLE        reduce using rule 63 (comparador -> MENIGUAL .)
    PIZQ            reduce using rule 63 (comparador -> MENIGUAL .)
    LIZQ            reduce using rule 63 (comparador -> MENIGUAL .)
    ENTERO          reduce using rule 63 (comparador -> MENIGUAL .)
    FLOAT           reduce using rule 63 (comparador -> MENIGUAL .)


state 64

    (64) comparador -> DIGUAL .

    VARIABLE        reduce using rule 64 (comparador -> DIGUAL .)
    PIZQ            reduce using rule 64 (comparador -> DIGUAL .)
    LIZQ            reduce using rule 64 (comparador -> DIGUAL .)
    ENTERO          reduce using rule 64 (comparador -> DIGUAL .)
    FLOAT           reduce using rule 64 (comparador -> DIGUAL .)


state 65

    (65) comparador -> NOIGUAL .

    VARIABLE        reduce using rule 65 (comparador -> NOIGUAL .)
    PIZQ            reduce using rule 65 (comparador -> NOIGUAL .)
    LIZQ            reduce using rule 65 (comparador -> NOIGUAL .)
    ENTERO          reduce using rule 65 (comparador -> NOIGUAL .)
    FLOAT           reduce using rule 65 (comparador -> NOIGUAL .)


state 66

    (32) if -> IF PIZQ . comparacion PDER LIZQ instrucciones LDER
    (33) if -> IF PIZQ . comparacion PDER LIZQ instrucciones LDER elseif
    (34) if -> IF PIZQ . comparacion PDER LIZQ instrucciones LDER else
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 101
    expression                     shift and go to state 102
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 67

    (40) for -> FOR PIZQ . declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> FOR PIZQ . declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (42) for -> FOR PIZQ . declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE

    VAR             shift and go to state 105
    LET             shift and go to state 106
    CONST           shift and go to state 36

    declaasig                      shift and go to state 103
    declaracion                    shift and go to state 104

state 68

    (43) while -> WHILE PIZQ . comparacion PDER LIZQ instrucciones LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 107
    expression                     shift and go to state 102
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 69

    (44) dowhile -> DO LIZQ . instrucciones LDER WHILE PIZQ comparacion PDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instrucciones                  shift and go to state 108
    comparacion                    shift and go to state 23
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 70

    (45) switch -> SWITCH PIZQ . VARIABLE PDER LIZQ cases LDER

    VARIABLE        shift and go to state 109


state 71

    (74) term -> term MULTI . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    factor                         shift and go to state 110

state 72

    (76) term -> term DIV . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    factor                         shift and go to state 111

state 73

    (59) comparacion -> STRING DIGUAL . STRING

    STRING          shift and go to state 112


state 74

    (18) declaracion -> VAR VARIABLE .
    (53) asignacion -> VARIABLE . IGUAL expression
    (54) asignacion -> VARIABLE . IGUAL comparacion
    (55) asignacion -> VARIABLE . IGUAL valor

    PUNTOYCOMA      reduce using rule 18 (declaracion -> VAR VARIABLE .)
    IN              reduce using rule 18 (declaracion -> VAR VARIABLE .)
    IGUAL           shift and go to state 45


state 75

    (20) declaasig -> VAR asignacion .

    PUNTOYCOMA      reduce using rule 20 (declaasig -> VAR asignacion .)


state 76

    (19) declaracion -> LET VARIABLE .
    (53) asignacion -> VARIABLE . IGUAL expression
    (54) asignacion -> VARIABLE . IGUAL comparacion
    (55) asignacion -> VARIABLE . IGUAL valor

    PUNTOYCOMA      reduce using rule 19 (declaracion -> LET VARIABLE .)
    IN              reduce using rule 19 (declaracion -> LET VARIABLE .)
    IGUAL           shift and go to state 45


state 77

    (21) declaasig -> LET asignacion .

    PUNTOYCOMA      reduce using rule 21 (declaasig -> LET asignacion .)


state 78

    (22) declaasig -> CONST asignacion .

    PUNTOYCOMA      reduce using rule 22 (declaasig -> CONST asignacion .)


state 79

    (53) asignacion -> VARIABLE . IGUAL expression
    (54) asignacion -> VARIABLE . IGUAL comparacion
    (55) asignacion -> VARIABLE . IGUAL valor

    IGUAL           shift and go to state 45


state 80

    (6) instrucciones -> instruccion PUNTOYCOMA instrucciones .

    $end            reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)
    LDER            reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)
    CASE            reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)
    DEFAULT         reduce using rule 6 (instrucciones -> instruccion PUNTOYCOMA instrucciones .)


state 81

    (9) instrucciones -> RETURN VARIABLE PUNTOYCOMA .

    $end            reduce using rule 9 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)
    LDER            reduce using rule 9 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)
    CASE            reduce using rule 9 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)
    DEFAULT         reduce using rule 9 (instrucciones -> RETURN VARIABLE PUNTOYCOMA .)


state 82

    (11) instrucciones -> VARIABLE INSTANCEOF VARIABLE .

    $end            reduce using rule 11 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)
    LDER            reduce using rule 11 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)
    CASE            reduce using rule 11 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)
    DEFAULT         reduce using rule 11 (instrucciones -> VARIABLE INSTANCEOF VARIABLE .)


state 83

    (53) asignacion -> VARIABLE IGUAL expression .
    (68) expression -> expression . SUMA term
    (70) expression -> expression . RESTA term
    (56) comparacion -> expression . comparador expression
    (57) comparacion -> expression . comparador expression DAMPERSAND comparacion
    (58) comparacion -> expression . comparador expression DTUBO comparacion
    (60) comparador -> . MAYOR
    (61) comparador -> . MENOR
    (62) comparador -> . MAYIGUAL
    (63) comparador -> . MENIGUAL
    (64) comparador -> . DIGUAL
    (65) comparador -> . NOIGUAL

    PUNTOYCOMA      reduce using rule 53 (asignacion -> VARIABLE IGUAL expression .)
    PDER            reduce using rule 53 (asignacion -> VARIABLE IGUAL expression .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MAYOR           shift and go to state 60
    MENOR           shift and go to state 61
    MAYIGUAL        shift and go to state 62
    MENIGUAL        shift and go to state 63
    DIGUAL          shift and go to state 64
    NOIGUAL         shift and go to state 65

    comparador                     shift and go to state 59

state 84

    (54) asignacion -> VARIABLE IGUAL comparacion .

    PUNTOYCOMA      reduce using rule 54 (asignacion -> VARIABLE IGUAL comparacion .)
    PDER            reduce using rule 54 (asignacion -> VARIABLE IGUAL comparacion .)


state 85

    (55) asignacion -> VARIABLE IGUAL valor .

    PUNTOYCOMA      reduce using rule 55 (asignacion -> VARIABLE IGUAL valor .)
    PDER            reduce using rule 55 (asignacion -> VARIABLE IGUAL valor .)


state 86

    (59) comparacion -> STRING . DIGUAL STRING
    (30) valor -> STRING .

    DIGUAL          shift and go to state 73
    PUNTOYCOMA      reduce using rule 30 (valor -> STRING .)
    PDER            reduce using rule 30 (valor -> STRING .)


state 87

    (28) valor -> ENTERO .
    (79) factor -> ENTERO .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 28 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 28 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 28 (valor -> ENTERO .)
    PDER            reduce using rule 28 (valor -> ENTERO .)
    MULTI           reduce using rule 79 (factor -> ENTERO .)
    DIV             reduce using rule 79 (factor -> ENTERO .)
    SUMA            reduce using rule 79 (factor -> ENTERO .)
    RESTA           reduce using rule 79 (factor -> ENTERO .)
    MAYOR           reduce using rule 79 (factor -> ENTERO .)
    MENOR           reduce using rule 79 (factor -> ENTERO .)
    MAYIGUAL        reduce using rule 79 (factor -> ENTERO .)
    MENIGUAL        reduce using rule 79 (factor -> ENTERO .)
    DIGUAL          reduce using rule 79 (factor -> ENTERO .)
    NOIGUAL         reduce using rule 79 (factor -> ENTERO .)

  ! PUNTOYCOMA      [ reduce using rule 79 (factor -> ENTERO .) ]
  ! PDER            [ reduce using rule 79 (factor -> ENTERO .) ]


state 88

    (29) valor -> FLOAT .
    (80) factor -> FLOAT .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 29 (valor -> FLOAT .)
  ! reduce/reduce conflict for PDER resolved using rule 29 (valor -> FLOAT .)
    PUNTOYCOMA      reduce using rule 29 (valor -> FLOAT .)
    PDER            reduce using rule 29 (valor -> FLOAT .)
    MULTI           reduce using rule 80 (factor -> FLOAT .)
    DIV             reduce using rule 80 (factor -> FLOAT .)
    SUMA            reduce using rule 80 (factor -> FLOAT .)
    RESTA           reduce using rule 80 (factor -> FLOAT .)
    MAYOR           reduce using rule 80 (factor -> FLOAT .)
    MENOR           reduce using rule 80 (factor -> FLOAT .)
    MAYIGUAL        reduce using rule 80 (factor -> FLOAT .)
    MENIGUAL        reduce using rule 80 (factor -> FLOAT .)
    DIGUAL          reduce using rule 80 (factor -> FLOAT .)
    NOIGUAL         reduce using rule 80 (factor -> FLOAT .)

  ! PUNTOYCOMA      [ reduce using rule 80 (factor -> FLOAT .) ]
  ! PDER            [ reduce using rule 80 (factor -> FLOAT .) ]


state 89

    (31) valor -> BOOL .

    PUNTOYCOMA      reduce using rule 31 (valor -> BOOL .)
    PDER            reduce using rule 31 (valor -> BOOL .)
    LDER            reduce using rule 31 (valor -> BOOL .)


state 90

    (69) expression -> VARIABLE SUMA VARIABLE .

    SUMA            reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    RESTA           reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    MAYOR           reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    MENOR           reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    MAYIGUAL        reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    MENIGUAL        reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    DIGUAL          reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    NOIGUAL         reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    PUNTOYCOMA      reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    PDER            reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    LDER            reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    DAMPERSAND      reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)
    DTUBO           reduce using rule 69 (expression -> VARIABLE SUMA VARIABLE .)


state 91

    (71) expression -> VARIABLE RESTA VARIABLE .
    (77) term -> VARIABLE RESTA VARIABLE .

  ! reduce/reduce conflict for SUMA resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MAYIGUAL resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for MENIGUAL resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for DIGUAL resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for DAMPERSAND resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
  ! reduce/reduce conflict for DTUBO resolved using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    SUMA            reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    RESTA           reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    MAYOR           reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    MENOR           reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    MAYIGUAL        reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    MENIGUAL        reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    DIGUAL          reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    NOIGUAL         reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    PUNTOYCOMA      reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    PDER            reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    LDER            reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    DAMPERSAND      reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    DTUBO           reduce using rule 71 (expression -> VARIABLE RESTA VARIABLE .)
    MULTI           reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    DIV             reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)

  ! SUMA            [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! RESTA           [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MAYOR           [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MENOR           [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! PDER            [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! LDER            [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! DAMPERSAND      [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]
  ! DTUBO           [ reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .) ]


state 92

    (75) term -> VARIABLE MULTI VARIABLE .

    MULTI           reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    DIV             reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    SUMA            reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    RESTA           reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    MAYOR           reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    MENOR           reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    MAYIGUAL        reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    MENIGUAL        reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    DIGUAL          reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    NOIGUAL         reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    PDER            reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    LDER            reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    DAMPERSAND      reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)
    DTUBO           reduce using rule 75 (term -> VARIABLE MULTI VARIABLE .)


state 93

    (83) funcion -> FUNCTION VARIABLE PIZQ . argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> FUNCTION VARIABLE PIZQ . argumentos PDER LIZQ LDER
    (85) funcion -> FUNCTION VARIABLE PIZQ . PDER LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ . PDER LIZQ LDER
    (87) argumentos -> . VARIABLE
    (88) argumentos -> . VARIABLE COMA argumentos

    PDER            shift and go to state 115
    VARIABLE        shift and go to state 113

    argumentos                     shift and go to state 114

state 94

    (81) expression -> PIZQ expression PDER .

    SUMA            reduce using rule 81 (expression -> PIZQ expression PDER .)
    RESTA           reduce using rule 81 (expression -> PIZQ expression PDER .)
    MAYOR           reduce using rule 81 (expression -> PIZQ expression PDER .)
    MENOR           reduce using rule 81 (expression -> PIZQ expression PDER .)
    MAYIGUAL        reduce using rule 81 (expression -> PIZQ expression PDER .)
    MENIGUAL        reduce using rule 81 (expression -> PIZQ expression PDER .)
    DIGUAL          reduce using rule 81 (expression -> PIZQ expression PDER .)
    NOIGUAL         reduce using rule 81 (expression -> PIZQ expression PDER .)
    PUNTOYCOMA      reduce using rule 81 (expression -> PIZQ expression PDER .)
    PDER            reduce using rule 81 (expression -> PIZQ expression PDER .)
    LDER            reduce using rule 81 (expression -> PIZQ expression PDER .)
    DAMPERSAND      reduce using rule 81 (expression -> PIZQ expression PDER .)
    DTUBO           reduce using rule 81 (expression -> PIZQ expression PDER .)


state 95

    (82) expression -> LIZQ expression LDER .

    SUMA            reduce using rule 82 (expression -> LIZQ expression LDER .)
    RESTA           reduce using rule 82 (expression -> LIZQ expression LDER .)
    MAYOR           reduce using rule 82 (expression -> LIZQ expression LDER .)
    MENOR           reduce using rule 82 (expression -> LIZQ expression LDER .)
    MAYIGUAL        reduce using rule 82 (expression -> LIZQ expression LDER .)
    MENIGUAL        reduce using rule 82 (expression -> LIZQ expression LDER .)
    DIGUAL          reduce using rule 82 (expression -> LIZQ expression LDER .)
    NOIGUAL         reduce using rule 82 (expression -> LIZQ expression LDER .)
    PUNTOYCOMA      reduce using rule 82 (expression -> LIZQ expression LDER .)
    PDER            reduce using rule 82 (expression -> LIZQ expression LDER .)
    LDER            reduce using rule 82 (expression -> LIZQ expression LDER .)
    DAMPERSAND      reduce using rule 82 (expression -> LIZQ expression LDER .)
    DTUBO           reduce using rule 82 (expression -> LIZQ expression LDER .)


state 96

    (102) def_clase -> CLASS VARIABLE LIZQ . cuerpo_class LDER
    (103) def_clase -> CLASS VARIABLE LIZQ . LDER
    (99) cuerpo_class -> . metodos_class
    (100) cuerpo_class -> . constructor
    (101) cuerpo_class -> . constructor metodos_class
    (97) metodos_class -> . funcion
    (98) metodos_class -> . funcion metodos_class
    (89) constructor -> . CONSTRUCTOR PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class LDER
    (90) constructor -> . CONSTRUCTOR PIZQ PDER LIZQ p_metodo_cuerpo_class LDER
    (83) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER

    LDER            shift and go to state 117
    CONSTRUCTOR     shift and go to state 121
    FUNCTION        shift and go to state 12

    cuerpo_class                   shift and go to state 116
    metodos_class                  shift and go to state 118
    constructor                    shift and go to state 119
    funcion                        shift and go to state 120

state 97

    (68) expression -> expression SUMA term .
    (74) term -> term . MULTI factor
    (76) term -> term . DIV factor

    SUMA            reduce using rule 68 (expression -> expression SUMA term .)
    RESTA           reduce using rule 68 (expression -> expression SUMA term .)
    MAYOR           reduce using rule 68 (expression -> expression SUMA term .)
    MENOR           reduce using rule 68 (expression -> expression SUMA term .)
    MAYIGUAL        reduce using rule 68 (expression -> expression SUMA term .)
    MENIGUAL        reduce using rule 68 (expression -> expression SUMA term .)
    DIGUAL          reduce using rule 68 (expression -> expression SUMA term .)
    NOIGUAL         reduce using rule 68 (expression -> expression SUMA term .)
    PUNTOYCOMA      reduce using rule 68 (expression -> expression SUMA term .)
    PDER            reduce using rule 68 (expression -> expression SUMA term .)
    LDER            reduce using rule 68 (expression -> expression SUMA term .)
    DAMPERSAND      reduce using rule 68 (expression -> expression SUMA term .)
    DTUBO           reduce using rule 68 (expression -> expression SUMA term .)
    MULTI           shift and go to state 71
    DIV             shift and go to state 72


state 98

    (75) term -> VARIABLE . MULTI VARIABLE
    (77) term -> VARIABLE . RESTA VARIABLE

    MULTI           shift and go to state 50
    RESTA           shift and go to state 122


state 99

    (70) expression -> expression RESTA term .
    (74) term -> term . MULTI factor
    (76) term -> term . DIV factor

    SUMA            reduce using rule 70 (expression -> expression RESTA term .)
    RESTA           reduce using rule 70 (expression -> expression RESTA term .)
    MAYOR           reduce using rule 70 (expression -> expression RESTA term .)
    MENOR           reduce using rule 70 (expression -> expression RESTA term .)
    MAYIGUAL        reduce using rule 70 (expression -> expression RESTA term .)
    MENIGUAL        reduce using rule 70 (expression -> expression RESTA term .)
    DIGUAL          reduce using rule 70 (expression -> expression RESTA term .)
    NOIGUAL         reduce using rule 70 (expression -> expression RESTA term .)
    PUNTOYCOMA      reduce using rule 70 (expression -> expression RESTA term .)
    PDER            reduce using rule 70 (expression -> expression RESTA term .)
    LDER            reduce using rule 70 (expression -> expression RESTA term .)
    DAMPERSAND      reduce using rule 70 (expression -> expression RESTA term .)
    DTUBO           reduce using rule 70 (expression -> expression RESTA term .)
    MULTI           shift and go to state 71
    DIV             shift and go to state 72


state 100

    (56) comparacion -> expression comparador expression .
    (57) comparacion -> expression comparador expression . DAMPERSAND comparacion
    (58) comparacion -> expression comparador expression . DTUBO comparacion
    (68) expression -> expression . SUMA term
    (70) expression -> expression . RESTA term

    PUNTOYCOMA      reduce using rule 56 (comparacion -> expression comparador expression .)
    PDER            reduce using rule 56 (comparacion -> expression comparador expression .)
    DAMPERSAND      shift and go to state 123
    DTUBO           shift and go to state 124
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58


state 101

    (32) if -> IF PIZQ comparacion . PDER LIZQ instrucciones LDER
    (33) if -> IF PIZQ comparacion . PDER LIZQ instrucciones LDER elseif
    (34) if -> IF PIZQ comparacion . PDER LIZQ instrucciones LDER else

    PDER            shift and go to state 125


state 102

    (56) comparacion -> expression . comparador expression
    (57) comparacion -> expression . comparador expression DAMPERSAND comparacion
    (58) comparacion -> expression . comparador expression DTUBO comparacion
    (68) expression -> expression . SUMA term
    (70) expression -> expression . RESTA term
    (60) comparador -> . MAYOR
    (61) comparador -> . MENOR
    (62) comparador -> . MAYIGUAL
    (63) comparador -> . MENIGUAL
    (64) comparador -> . DIGUAL
    (65) comparador -> . NOIGUAL

    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MAYOR           shift and go to state 60
    MENOR           shift and go to state 61
    MAYIGUAL        shift and go to state 62
    MENIGUAL        shift and go to state 63
    DIGUAL          shift and go to state 64
    NOIGUAL         shift and go to state 65

    comparador                     shift and go to state 59

state 103

    (40) for -> FOR PIZQ declaasig . PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> FOR PIZQ declaasig . PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER

    PUNTOYCOMA      shift and go to state 126


state 104

    (42) for -> FOR PIZQ declaracion . IN VARIABLE PDER LIZQ instrucciones LDER

    IN              shift and go to state 127


state 105

    (20) declaasig -> VAR . asignacion
    (18) declaracion -> VAR . VARIABLE
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 74

    asignacion                     shift and go to state 75

state 106

    (21) declaasig -> LET . asignacion
    (19) declaracion -> LET . VARIABLE
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 76

    asignacion                     shift and go to state 77

state 107

    (43) while -> WHILE PIZQ comparacion . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 128


state 108

    (44) dowhile -> DO LIZQ instrucciones . LDER WHILE PIZQ comparacion PDER

    LDER            shift and go to state 129


state 109

    (45) switch -> SWITCH PIZQ VARIABLE . PDER LIZQ cases LDER

    PDER            shift and go to state 130


state 110

    (74) term -> term MULTI factor .

    MULTI           reduce using rule 74 (term -> term MULTI factor .)
    DIV             reduce using rule 74 (term -> term MULTI factor .)
    SUMA            reduce using rule 74 (term -> term MULTI factor .)
    RESTA           reduce using rule 74 (term -> term MULTI factor .)
    MAYOR           reduce using rule 74 (term -> term MULTI factor .)
    MENOR           reduce using rule 74 (term -> term MULTI factor .)
    MAYIGUAL        reduce using rule 74 (term -> term MULTI factor .)
    MENIGUAL        reduce using rule 74 (term -> term MULTI factor .)
    DIGUAL          reduce using rule 74 (term -> term MULTI factor .)
    NOIGUAL         reduce using rule 74 (term -> term MULTI factor .)
    PUNTOYCOMA      reduce using rule 74 (term -> term MULTI factor .)
    PDER            reduce using rule 74 (term -> term MULTI factor .)
    LDER            reduce using rule 74 (term -> term MULTI factor .)
    DAMPERSAND      reduce using rule 74 (term -> term MULTI factor .)
    DTUBO           reduce using rule 74 (term -> term MULTI factor .)


state 111

    (76) term -> term DIV factor .

    MULTI           reduce using rule 76 (term -> term DIV factor .)
    DIV             reduce using rule 76 (term -> term DIV factor .)
    SUMA            reduce using rule 76 (term -> term DIV factor .)
    RESTA           reduce using rule 76 (term -> term DIV factor .)
    MAYOR           reduce using rule 76 (term -> term DIV factor .)
    MENOR           reduce using rule 76 (term -> term DIV factor .)
    MAYIGUAL        reduce using rule 76 (term -> term DIV factor .)
    MENIGUAL        reduce using rule 76 (term -> term DIV factor .)
    DIGUAL          reduce using rule 76 (term -> term DIV factor .)
    NOIGUAL         reduce using rule 76 (term -> term DIV factor .)
    PUNTOYCOMA      reduce using rule 76 (term -> term DIV factor .)
    PDER            reduce using rule 76 (term -> term DIV factor .)
    LDER            reduce using rule 76 (term -> term DIV factor .)
    DAMPERSAND      reduce using rule 76 (term -> term DIV factor .)
    DTUBO           reduce using rule 76 (term -> term DIV factor .)


state 112

    (59) comparacion -> STRING DIGUAL STRING .

    PUNTOYCOMA      reduce using rule 59 (comparacion -> STRING DIGUAL STRING .)
    PDER            reduce using rule 59 (comparacion -> STRING DIGUAL STRING .)


state 113

    (87) argumentos -> VARIABLE .
    (88) argumentos -> VARIABLE . COMA argumentos

    PDER            reduce using rule 87 (argumentos -> VARIABLE .)
    COMA            shift and go to state 131


state 114

    (83) funcion -> FUNCTION VARIABLE PIZQ argumentos . PDER LIZQ instrucciones LDER
    (84) funcion -> FUNCTION VARIABLE PIZQ argumentos . PDER LIZQ LDER

    PDER            shift and go to state 132


state 115

    (85) funcion -> FUNCTION VARIABLE PIZQ PDER . LIZQ instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ PDER . LIZQ LDER

    LIZQ            shift and go to state 133


state 116

    (102) def_clase -> CLASS VARIABLE LIZQ cuerpo_class . LDER

    LDER            shift and go to state 134


state 117

    (103) def_clase -> CLASS VARIABLE LIZQ LDER .

    $end            reduce using rule 103 (def_clase -> CLASS VARIABLE LIZQ LDER .)
    LDER            reduce using rule 103 (def_clase -> CLASS VARIABLE LIZQ LDER .)


state 118

    (99) cuerpo_class -> metodos_class .

    LDER            reduce using rule 99 (cuerpo_class -> metodos_class .)


state 119

    (100) cuerpo_class -> constructor .
    (101) cuerpo_class -> constructor . metodos_class
    (97) metodos_class -> . funcion
    (98) metodos_class -> . funcion metodos_class
    (83) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER

    LDER            reduce using rule 100 (cuerpo_class -> constructor .)
    FUNCTION        shift and go to state 12

    metodos_class                  shift and go to state 135
    funcion                        shift and go to state 120

state 120

    (97) metodos_class -> funcion .
    (98) metodos_class -> funcion . metodos_class
    (97) metodos_class -> . funcion
    (98) metodos_class -> . funcion metodos_class
    (83) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER

    LDER            reduce using rule 97 (metodos_class -> funcion .)
    FUNCTION        shift and go to state 12

    funcion                        shift and go to state 120
    metodos_class                  shift and go to state 136

state 121

    (89) constructor -> CONSTRUCTOR . PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class LDER
    (90) constructor -> CONSTRUCTOR . PIZQ PDER LIZQ p_metodo_cuerpo_class LDER

    PIZQ            shift and go to state 137


state 122

    (77) term -> VARIABLE RESTA . VARIABLE

    VARIABLE        shift and go to state 138


state 123

    (57) comparacion -> expression comparador expression DAMPERSAND . comparacion
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    expression                     shift and go to state 102
    comparacion                    shift and go to state 139
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 124

    (58) comparacion -> expression comparador expression DTUBO . comparacion
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    expression                     shift and go to state 102
    comparacion                    shift and go to state 140
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 125

    (32) if -> IF PIZQ comparacion PDER . LIZQ instrucciones LDER
    (33) if -> IF PIZQ comparacion PDER . LIZQ instrucciones LDER elseif
    (34) if -> IF PIZQ comparacion PDER . LIZQ instrucciones LDER else

    LIZQ            shift and go to state 141


state 126

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA . comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> FOR PIZQ declaasig PUNTOYCOMA . comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 142
    expression                     shift and go to state 102
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 127

    (42) for -> FOR PIZQ declaracion IN . VARIABLE PDER LIZQ instrucciones LDER

    VARIABLE        shift and go to state 143


state 128

    (43) while -> WHILE PIZQ comparacion PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 144


state 129

    (44) dowhile -> DO LIZQ instrucciones LDER . WHILE PIZQ comparacion PDER

    WHILE           shift and go to state 145


state 130

    (45) switch -> SWITCH PIZQ VARIABLE PDER . LIZQ cases LDER

    LIZQ            shift and go to state 146


state 131

    (88) argumentos -> VARIABLE COMA . argumentos
    (87) argumentos -> . VARIABLE
    (88) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 113

    argumentos                     shift and go to state 147

state 132

    (83) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER . LIZQ instrucciones LDER
    (84) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER . LIZQ LDER

    LIZQ            shift and go to state 148


state 133

    (85) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ . instrucciones LDER
    (86) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ . LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    LDER            shift and go to state 150
    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 134

    (102) def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER .

    $end            reduce using rule 102 (def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER .)
    LDER            reduce using rule 102 (def_clase -> CLASS VARIABLE LIZQ cuerpo_class LDER .)


state 135

    (101) cuerpo_class -> constructor metodos_class .

    LDER            reduce using rule 101 (cuerpo_class -> constructor metodos_class .)


state 136

    (98) metodos_class -> funcion metodos_class .

    LDER            reduce using rule 98 (metodos_class -> funcion metodos_class .)


state 137

    (89) constructor -> CONSTRUCTOR PIZQ . argumentos PDER LIZQ p_metodo_cuerpo_class LDER
    (90) constructor -> CONSTRUCTOR PIZQ . PDER LIZQ p_metodo_cuerpo_class LDER
    (87) argumentos -> . VARIABLE
    (88) argumentos -> . VARIABLE COMA argumentos

    PDER            shift and go to state 152
    VARIABLE        shift and go to state 113

    argumentos                     shift and go to state 151

state 138

    (77) term -> VARIABLE RESTA VARIABLE .

    MULTI           reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    DIV             reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    SUMA            reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    RESTA           reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    MAYOR           reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    MENOR           reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    MAYIGUAL        reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    MENIGUAL        reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    DIGUAL          reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    NOIGUAL         reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    PUNTOYCOMA      reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    PDER            reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    LDER            reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    DAMPERSAND      reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)
    DTUBO           reduce using rule 77 (term -> VARIABLE RESTA VARIABLE .)


state 139

    (57) comparacion -> expression comparador expression DAMPERSAND comparacion .

    PUNTOYCOMA      reduce using rule 57 (comparacion -> expression comparador expression DAMPERSAND comparacion .)
    PDER            reduce using rule 57 (comparacion -> expression comparador expression DAMPERSAND comparacion .)


state 140

    (58) comparacion -> expression comparador expression DTUBO comparacion .

    PUNTOYCOMA      reduce using rule 58 (comparacion -> expression comparador expression DTUBO comparacion .)
    PDER            reduce using rule 58 (comparacion -> expression comparador expression DTUBO comparacion .)


state 141

    (32) if -> IF PIZQ comparacion PDER LIZQ . instrucciones LDER
    (33) if -> IF PIZQ comparacion PDER LIZQ . instrucciones LDER elseif
    (34) if -> IF PIZQ comparacion PDER LIZQ . instrucciones LDER else
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 23
    instrucciones                  shift and go to state 153
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 142

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion . PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion . PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER

    PUNTOYCOMA      shift and go to state 154


state 143

    (42) for -> FOR PIZQ declaracion IN VARIABLE . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 155


state 144

    (43) while -> WHILE PIZQ comparacion PDER LIZQ . instrucciones LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 23
    instrucciones                  shift and go to state 156
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 145

    (44) dowhile -> DO LIZQ instrucciones LDER WHILE . PIZQ comparacion PDER

    PIZQ            shift and go to state 157


state 146

    (45) switch -> SWITCH PIZQ VARIABLE PDER LIZQ . cases LDER
    (46) cases -> . CASE VARIABLE DOSPUNTOS instrucciones
    (47) cases -> . CASE VARIABLE DOSPUNTOS instrucciones cases
    (48) cases -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 159
    DEFAULT         shift and go to state 160

    cases                          shift and go to state 158

state 147

    (88) argumentos -> VARIABLE COMA argumentos .

    PDER            reduce using rule 88 (argumentos -> VARIABLE COMA argumentos .)


state 148

    (83) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ . instrucciones LDER
    (84) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ . LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    LDER            shift and go to state 162
    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instrucciones                  shift and go to state 161
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 149

    (85) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 163


state 150

    (86) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .

    $end            reduce using rule 86 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .)
    FUNCTION        reduce using rule 86 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .)
    LDER            reduce using rule 86 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ LDER .)


state 151

    (89) constructor -> CONSTRUCTOR PIZQ argumentos . PDER LIZQ p_metodo_cuerpo_class LDER

    PDER            shift and go to state 164


state 152

    (90) constructor -> CONSTRUCTOR PIZQ PDER . LIZQ p_metodo_cuerpo_class LDER

    LIZQ            shift and go to state 165


state 153

    (32) if -> IF PIZQ comparacion PDER LIZQ instrucciones . LDER
    (33) if -> IF PIZQ comparacion PDER LIZQ instrucciones . LDER elseif
    (34) if -> IF PIZQ comparacion PDER LIZQ instrucciones . LDER else

    LDER            shift and go to state 166


state 154

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA . operadores PDER LIZQ instrucciones LDER
    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA . asignacion PDER LIZQ instrucciones LDER
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor

    VARIABLE        shift and go to state 169

    operadores                     shift and go to state 167
    asignacion                     shift and go to state 168

state 155

    (42) for -> FOR PIZQ declaracion IN VARIABLE PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 170


state 156

    (43) while -> WHILE PIZQ comparacion PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 171


state 157

    (44) dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ . comparacion PDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 172
    expression                     shift and go to state 102
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 158

    (45) switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases . LDER

    LDER            shift and go to state 173


state 159

    (46) cases -> CASE . VARIABLE DOSPUNTOS instrucciones
    (47) cases -> CASE . VARIABLE DOSPUNTOS instrucciones cases

    VARIABLE        shift and go to state 174


state 160

    (48) cases -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 175


state 161

    (83) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 176


state 162

    (84) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .

    $end            reduce using rule 84 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .)
    FUNCTION        reduce using rule 84 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .)
    LDER            reduce using rule 84 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER .)


state 163

    (85) funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .

    $end            reduce using rule 85 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .)
    FUNCTION        reduce using rule 85 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 85 (funcion -> FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER .)


state 164

    (89) constructor -> CONSTRUCTOR PIZQ argumentos PDER . LIZQ p_metodo_cuerpo_class LDER

    LIZQ            shift and go to state 177


state 165

    (90) constructor -> CONSTRUCTOR PIZQ PDER LIZQ . p_metodo_cuerpo_class LDER
    (94) p_metodo_cuerpo_class -> . cuerpo
    (95) p_metodo_cuerpo_class -> . var_class
    (96) p_metodo_cuerpo_class -> . p_metodo_cuerpo_class
    (1) cuerpo -> . instrucciones
    (2) cuerpo -> . funcion
    (3) cuerpo -> . estrcontrol
    (4) cuerpo -> . def_clase
    (91) var_class -> . THIS PUNTO VARIABLE
    (92) var_class -> . THIS PUNTO VARIABLE IGUAL valor
    (93) var_class -> . THIS PUNTO VARIABLE IGUAL VARIABLE
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (83) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER
    (23) estrcontrol -> . if
    (24) estrcontrol -> . for
    (25) estrcontrol -> . while
    (26) estrcontrol -> . dowhile
    (27) estrcontrol -> . switch
    (102) def_clase -> . CLASS VARIABLE LIZQ cuerpo_class LDER
    (103) def_clase -> . CLASS VARIABLE LIZQ LDER
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (32) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (33) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (34) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (40) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (42) for -> . FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (43) while -> . WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
    (44) dowhile -> . DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
    (45) switch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    THIS            shift and go to state 181
    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    FUNCTION        shift and go to state 12
    CLASS           shift and go to state 20
    IF              shift and go to state 27
    FOR             shift and go to state 28
    WHILE           shift and go to state 29
    DO              shift and go to state 30
    SWITCH          shift and go to state 31
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    p_metodo_cuerpo_class          shift and go to state 178
    cuerpo                         shift and go to state 179
    var_class                      shift and go to state 180
    instrucciones                  shift and go to state 2
    funcion                        shift and go to state 3
    estrcontrol                    shift and go to state 4
    def_clase                      shift and go to state 5
    instruccion                    shift and go to state 6
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    dowhile                        shift and go to state 18
    switch                         shift and go to state 19
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 166

    (32) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER .
    (33) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER . elseif
    (34) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER . else
    (35) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (36) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (37) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (38) else -> . ELSE LIZQ instrucciones LDER
    (39) else -> . ELSE LIZQ LDER

    $end            reduce using rule 32 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 32 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    ELSE            shift and go to state 184

    elseif                         shift and go to state 182
    else                           shift and go to state 183

state 167

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 185


state 168

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion . PDER LIZQ instrucciones LDER

    PDER            shift and go to state 186


state 169

    (66) operadores -> VARIABLE . DSUMA
    (67) operadores -> VARIABLE . DRESTA
    (53) asignacion -> VARIABLE . IGUAL expression
    (54) asignacion -> VARIABLE . IGUAL comparacion
    (55) asignacion -> VARIABLE . IGUAL valor

    DSUMA           shift and go to state 48
    DRESTA          shift and go to state 49
    IGUAL           shift and go to state 45


state 170

    (42) for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ . instrucciones LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    declaracion                    shift and go to state 24
    instrucciones                  shift and go to state 187
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 171

    (43) while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER .

    $end            reduce using rule 43 (while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 43 (while -> WHILE PIZQ comparacion PDER LIZQ instrucciones LDER .)


state 172

    (44) dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion . PDER

    PDER            shift and go to state 188


state 173

    (45) switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .

    $end            reduce using rule 45 (switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    LDER            reduce using rule 45 (switch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)


state 174

    (46) cases -> CASE VARIABLE . DOSPUNTOS instrucciones
    (47) cases -> CASE VARIABLE . DOSPUNTOS instrucciones cases

    DOSPUNTOS       shift and go to state 189


state 175

    (48) cases -> DEFAULT DOSPUNTOS . instrucciones
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instrucciones                  shift and go to state 190
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 176

    (83) funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .

    $end            reduce using rule 83 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .)
    FUNCTION        reduce using rule 83 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 83 (funcion -> FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER .)


state 177

    (89) constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ . p_metodo_cuerpo_class LDER
    (94) p_metodo_cuerpo_class -> . cuerpo
    (95) p_metodo_cuerpo_class -> . var_class
    (96) p_metodo_cuerpo_class -> . p_metodo_cuerpo_class
    (1) cuerpo -> . instrucciones
    (2) cuerpo -> . funcion
    (3) cuerpo -> . estrcontrol
    (4) cuerpo -> . def_clase
    (91) var_class -> . THIS PUNTO VARIABLE
    (92) var_class -> . THIS PUNTO VARIABLE IGUAL valor
    (93) var_class -> . THIS PUNTO VARIABLE IGUAL VARIABLE
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (83) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ instrucciones LDER
    (84) funcion -> . FUNCTION VARIABLE PIZQ argumentos PDER LIZQ LDER
    (85) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ instrucciones LDER
    (86) funcion -> . FUNCTION VARIABLE PIZQ PDER LIZQ LDER
    (23) estrcontrol -> . if
    (24) estrcontrol -> . for
    (25) estrcontrol -> . while
    (26) estrcontrol -> . dowhile
    (27) estrcontrol -> . switch
    (102) def_clase -> . CLASS VARIABLE LIZQ cuerpo_class LDER
    (103) def_clase -> . CLASS VARIABLE LIZQ LDER
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (32) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (33) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (34) if -> . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (40) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER
    (41) for -> . FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER
    (42) for -> . FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER
    (43) while -> . WHILE PIZQ comparacion PDER LIZQ instrucciones LDER
    (44) dowhile -> . DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER
    (45) switch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    THIS            shift and go to state 181
    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    FUNCTION        shift and go to state 12
    CLASS           shift and go to state 20
    IF              shift and go to state 27
    FOR             shift and go to state 28
    WHILE           shift and go to state 29
    DO              shift and go to state 30
    SWITCH          shift and go to state 31
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    p_metodo_cuerpo_class          shift and go to state 191
    cuerpo                         shift and go to state 179
    var_class                      shift and go to state 180
    instrucciones                  shift and go to state 2
    funcion                        shift and go to state 3
    estrcontrol                    shift and go to state 4
    def_clase                      shift and go to state 5
    instruccion                    shift and go to state 6
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    dowhile                        shift and go to state 18
    switch                         shift and go to state 19
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 178

    (90) constructor -> CONSTRUCTOR PIZQ PDER LIZQ p_metodo_cuerpo_class . LDER
    (96) p_metodo_cuerpo_class -> p_metodo_cuerpo_class .

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 192

  ! LDER            [ reduce using rule 96 (p_metodo_cuerpo_class -> p_metodo_cuerpo_class .) ]


state 179

    (94) p_metodo_cuerpo_class -> cuerpo .

    LDER            reduce using rule 94 (p_metodo_cuerpo_class -> cuerpo .)


state 180

    (95) p_metodo_cuerpo_class -> var_class .

    LDER            reduce using rule 95 (p_metodo_cuerpo_class -> var_class .)


state 181

    (91) var_class -> THIS . PUNTO VARIABLE
    (92) var_class -> THIS . PUNTO VARIABLE IGUAL valor
    (93) var_class -> THIS . PUNTO VARIABLE IGUAL VARIABLE

    PUNTO           shift and go to state 193


state 182

    (33) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .

    $end            reduce using rule 33 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)
    LDER            reduce using rule 33 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)


state 183

    (34) if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else .

    $end            reduce using rule 34 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)
    LDER            reduce using rule 34 (if -> IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)


state 184

    (35) elseif -> ELSE . IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (36) elseif -> ELSE . IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (37) elseif -> ELSE . IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (38) else -> ELSE . LIZQ instrucciones LDER
    (39) else -> ELSE . LIZQ LDER

    IF              shift and go to state 194
    LIZQ            shift and go to state 195


state 185

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 196


state 186

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER . LIZQ instrucciones LDER

    LIZQ            shift and go to state 197


state 187

    (42) for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 198


state 188

    (44) dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER .

    $end            reduce using rule 44 (dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER .)
    LDER            reduce using rule 44 (dowhile -> DO LIZQ instrucciones LDER WHILE PIZQ comparacion PDER .)


state 189

    (46) cases -> CASE VARIABLE DOSPUNTOS . instrucciones
    (47) cases -> CASE VARIABLE DOSPUNTOS . instrucciones cases
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instrucciones                  shift and go to state 199
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 190

    (48) cases -> DEFAULT DOSPUNTOS instrucciones .

    LDER            reduce using rule 48 (cases -> DEFAULT DOSPUNTOS instrucciones .)


state 191

    (89) constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class . LDER
    (96) p_metodo_cuerpo_class -> p_metodo_cuerpo_class .

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 200

  ! LDER            [ reduce using rule 96 (p_metodo_cuerpo_class -> p_metodo_cuerpo_class .) ]


state 192

    (90) constructor -> CONSTRUCTOR PIZQ PDER LIZQ p_metodo_cuerpo_class LDER .

    FUNCTION        reduce using rule 90 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ p_metodo_cuerpo_class LDER .)
    LDER            reduce using rule 90 (constructor -> CONSTRUCTOR PIZQ PDER LIZQ p_metodo_cuerpo_class LDER .)


state 193

    (91) var_class -> THIS PUNTO . VARIABLE
    (92) var_class -> THIS PUNTO . VARIABLE IGUAL valor
    (93) var_class -> THIS PUNTO . VARIABLE IGUAL VARIABLE

    VARIABLE        shift and go to state 201


state 194

    (35) elseif -> ELSE IF . PIZQ comparacion PDER LIZQ instrucciones LDER
    (36) elseif -> ELSE IF . PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (37) elseif -> ELSE IF . PIZQ comparacion PDER LIZQ instrucciones LDER else

    PIZQ            shift and go to state 202


state 195

    (38) else -> ELSE LIZQ . instrucciones LDER
    (39) else -> ELSE LIZQ . LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    LDER            shift and go to state 204
    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    instrucciones                  shift and go to state 203
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    comparacion                    shift and go to state 23
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 196

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ . instrucciones LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    declaasig                      shift and go to state 25
    comparacion                    shift and go to state 23
    operadores                     shift and go to state 26
    instrucciones                  shift and go to state 205
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    declaracion                    shift and go to state 24
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 197

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ . instrucciones LDER
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    declaasig                      shift and go to state 25
    comparacion                    shift and go to state 23
    asignacion                     shift and go to state 21
    instrucciones                  shift and go to state 206
    instruccion                    shift and go to state 6
    expression                     shift and go to state 22
    declaracion                    shift and go to state 24
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 198

    (42) for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER .

    $end            reduce using rule 42 (for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 42 (for -> FOR PIZQ declaracion IN VARIABLE PDER LIZQ instrucciones LDER .)


state 199

    (46) cases -> CASE VARIABLE DOSPUNTOS instrucciones .
    (47) cases -> CASE VARIABLE DOSPUNTOS instrucciones . cases
    (46) cases -> . CASE VARIABLE DOSPUNTOS instrucciones
    (47) cases -> . CASE VARIABLE DOSPUNTOS instrucciones cases
    (48) cases -> . DEFAULT DOSPUNTOS instrucciones

    LDER            reduce using rule 46 (cases -> CASE VARIABLE DOSPUNTOS instrucciones .)
    CASE            shift and go to state 159
    DEFAULT         shift and go to state 160

    cases                          shift and go to state 207

state 200

    (89) constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class LDER .

    FUNCTION        reduce using rule 89 (constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class LDER .)
    LDER            reduce using rule 89 (constructor -> CONSTRUCTOR PIZQ argumentos PDER LIZQ p_metodo_cuerpo_class LDER .)


state 201

    (91) var_class -> THIS PUNTO VARIABLE .
    (92) var_class -> THIS PUNTO VARIABLE . IGUAL valor
    (93) var_class -> THIS PUNTO VARIABLE . IGUAL VARIABLE

    LDER            reduce using rule 91 (var_class -> THIS PUNTO VARIABLE .)
    IGUAL           shift and go to state 208


state 202

    (35) elseif -> ELSE IF PIZQ . comparacion PDER LIZQ instrucciones LDER
    (36) elseif -> ELSE IF PIZQ . comparacion PDER LIZQ instrucciones LDER elseif
    (37) elseif -> ELSE IF PIZQ . comparacion PDER LIZQ instrucciones LDER else
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    STRING          shift and go to state 33
    VARIABLE        shift and go to state 54
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 209
    expression                     shift and go to state 102
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 203

    (38) else -> ELSE LIZQ instrucciones . LDER

    LDER            shift and go to state 210


state 204

    (39) else -> ELSE LIZQ LDER .

    $end            reduce using rule 39 (else -> ELSE LIZQ LDER .)
    LDER            reduce using rule 39 (else -> ELSE LIZQ LDER .)


state 205

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 211


state 206

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones . LDER

    LDER            shift and go to state 212


state 207

    (47) cases -> CASE VARIABLE DOSPUNTOS instrucciones cases .

    LDER            reduce using rule 47 (cases -> CASE VARIABLE DOSPUNTOS instrucciones cases .)


state 208

    (92) var_class -> THIS PUNTO VARIABLE IGUAL . valor
    (93) var_class -> THIS PUNTO VARIABLE IGUAL . VARIABLE
    (28) valor -> . ENTERO
    (29) valor -> . FLOAT
    (30) valor -> . STRING
    (31) valor -> . BOOL

    VARIABLE        shift and go to state 213
    ENTERO          shift and go to state 215
    FLOAT           shift and go to state 216
    STRING          shift and go to state 217
    BOOL            shift and go to state 89

    valor                          shift and go to state 214

state 209

    (35) elseif -> ELSE IF PIZQ comparacion . PDER LIZQ instrucciones LDER
    (36) elseif -> ELSE IF PIZQ comparacion . PDER LIZQ instrucciones LDER elseif
    (37) elseif -> ELSE IF PIZQ comparacion . PDER LIZQ instrucciones LDER else

    PDER            shift and go to state 218


state 210

    (38) else -> ELSE LIZQ instrucciones LDER .

    $end            reduce using rule 38 (else -> ELSE LIZQ instrucciones LDER .)
    LDER            reduce using rule 38 (else -> ELSE LIZQ instrucciones LDER .)


state 211

    (40) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER .

    $end            reduce using rule 40 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 40 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA operadores PDER LIZQ instrucciones LDER .)


state 212

    (41) for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER .

    $end            reduce using rule 41 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 41 (for -> FOR PIZQ declaasig PUNTOYCOMA comparacion PUNTOYCOMA asignacion PDER LIZQ instrucciones LDER .)


state 213

    (93) var_class -> THIS PUNTO VARIABLE IGUAL VARIABLE .

    LDER            reduce using rule 93 (var_class -> THIS PUNTO VARIABLE IGUAL VARIABLE .)


state 214

    (92) var_class -> THIS PUNTO VARIABLE IGUAL valor .

    LDER            reduce using rule 92 (var_class -> THIS PUNTO VARIABLE IGUAL valor .)


state 215

    (28) valor -> ENTERO .

    LDER            reduce using rule 28 (valor -> ENTERO .)


state 216

    (29) valor -> FLOAT .

    LDER            reduce using rule 29 (valor -> FLOAT .)


state 217

    (30) valor -> STRING .

    LDER            reduce using rule 30 (valor -> STRING .)


state 218

    (35) elseif -> ELSE IF PIZQ comparacion PDER . LIZQ instrucciones LDER
    (36) elseif -> ELSE IF PIZQ comparacion PDER . LIZQ instrucciones LDER elseif
    (37) elseif -> ELSE IF PIZQ comparacion PDER . LIZQ instrucciones LDER else

    LIZQ            shift and go to state 219


state 219

    (35) elseif -> ELSE IF PIZQ comparacion PDER LIZQ . instrucciones LDER
    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ . instrucciones LDER elseif
    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ . instrucciones LDER else
    (5) instrucciones -> . instruccion PUNTOYCOMA
    (6) instrucciones -> . instruccion PUNTOYCOMA instrucciones
    (7) instrucciones -> . BREAK PUNTOYCOMA
    (8) instrucciones -> . CONTINUE PUNTOYCOMA
    (9) instrucciones -> . RETURN VARIABLE PUNTOYCOMA
    (10) instrucciones -> . TYPEOF VARIABLE
    (11) instrucciones -> . VARIABLE INSTANCEOF VARIABLE
    (12) instruccion -> . asignacion
    (13) instruccion -> . expression
    (14) instruccion -> . comparacion
    (15) instruccion -> . declaracion
    (16) instruccion -> . declaasig
    (17) instruccion -> . operadores
    (53) asignacion -> . VARIABLE IGUAL expression
    (54) asignacion -> . VARIABLE IGUAL comparacion
    (55) asignacion -> . VARIABLE IGUAL valor
    (68) expression -> . expression SUMA term
    (69) expression -> . VARIABLE SUMA VARIABLE
    (70) expression -> . expression RESTA term
    (71) expression -> . VARIABLE RESTA VARIABLE
    (72) expression -> . term
    (73) expression -> . VARIABLE
    (81) expression -> . PIZQ expression PDER
    (82) expression -> . LIZQ expression LDER
    (56) comparacion -> . expression comparador expression
    (57) comparacion -> . expression comparador expression DAMPERSAND comparacion
    (58) comparacion -> . expression comparador expression DTUBO comparacion
    (59) comparacion -> . STRING DIGUAL STRING
    (18) declaracion -> . VAR VARIABLE
    (19) declaracion -> . LET VARIABLE
    (20) declaasig -> . VAR asignacion
    (21) declaasig -> . LET asignacion
    (22) declaasig -> . CONST asignacion
    (66) operadores -> . VARIABLE DSUMA
    (67) operadores -> . VARIABLE DRESTA
    (74) term -> . term MULTI factor
    (75) term -> . VARIABLE MULTI VARIABLE
    (76) term -> . term DIV factor
    (77) term -> . VARIABLE RESTA VARIABLE
    (78) term -> . factor
    (79) factor -> . ENTERO
    (80) factor -> . FLOAT

    BREAK           shift and go to state 7
    CONTINUE        shift and go to state 8
    RETURN          shift and go to state 9
    TYPEOF          shift and go to state 11
    VARIABLE        shift and go to state 10
    PIZQ            shift and go to state 13
    LIZQ            shift and go to state 14
    STRING          shift and go to state 33
    VAR             shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36
    ENTERO          shift and go to state 38
    FLOAT           shift and go to state 39

    comparacion                    shift and go to state 23
    instrucciones                  shift and go to state 220
    instruccion                    shift and go to state 6
    asignacion                     shift and go to state 21
    expression                     shift and go to state 22
    declaracion                    shift and go to state 24
    declaasig                      shift and go to state 25
    operadores                     shift and go to state 26
    term                           shift and go to state 32
    factor                         shift and go to state 37

state 220

    (35) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones . LDER
    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones . LDER elseif
    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones . LDER else

    LDER            shift and go to state 221


state 221

    (35) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER .
    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER . elseif
    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER . else
    (35) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER
    (36) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif
    (37) elseif -> . ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else
    (38) else -> . ELSE LIZQ instrucciones LDER
    (39) else -> . ELSE LIZQ LDER

    $end            reduce using rule 35 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    LDER            reduce using rule 35 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER .)
    ELSE            shift and go to state 184

    elseif                         shift and go to state 222
    else                           shift and go to state 223

state 222

    (36) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .

    $end            reduce using rule 36 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)
    LDER            reduce using rule 36 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER elseif .)


state 223

    (37) elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else .

    $end            reduce using rule 37 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)
    LDER            reduce using rule 37 (elseif -> ELSE IF PIZQ comparacion PDER LIZQ instrucciones LDER else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 10 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 10 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 54 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 54 resolved as shift
WARNING: shift/reduce conflict for LDER in state 178 resolved as shift
WARNING: shift/reduce conflict for LDER in state 191 resolved as shift
WARNING: reduce/reduce conflict in state 87 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (factor -> ENTERO) in state 87
WARNING: reduce/reduce conflict in state 88 resolved using rule (valor -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 88
WARNING: reduce/reduce conflict in state 91 resolved using rule (expression -> VARIABLE RESTA VARIABLE)
WARNING: rejected rule (term -> VARIABLE RESTA VARIABLE) in state 91
